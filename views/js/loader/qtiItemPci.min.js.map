{"version":3,"mappings":"AACAA,+IACA,iCACAC,6DACA,wGAYA,MATAC,8LACAC,0NACA,+KACAA,oMACA,gHACAA,oMACA,yFACAA,gNACA,gJACAD,MACA,KChBAF,gJAKA,+BAEA,oCA6BA,MA5BAE,0CACAE,+EACAA,uHACAF,iCACA,6BACAE,+EACAA,uHACAF,iCACA,8BACAG,kIACAA,sCACAH,mFACAE,sEACAA,8GACAF,iCACAG,qIACAA,sCACAH,gBACAE,sEACAA,8GACAF,iCACA,QACAE,wEACAA,gHACAF,iCACA,kDACAC,sLACA,6NACAD,MACA,CACA,+BAGA,uBACA,CAEA,+BAGA,sDACA,CA/CA,iCACAD,6DACA,iJAoDA,MALAC,iFACAC,wNACA,wBACAE,qIACAA,sCACAH,MACA,KCxDAF,oJACA,iCACAC,6DACA,uIAuBA,MApBAC,0CACAE,sEACAA,8GACAF,iCACA,yFACAC,qLACAC,sEACAA,8GACAF,iCACA,KACAC,iLACAC,+EACAA,uHACAF,iCACA,KACAC,2LACAC,wEACAA,gHACAF,iCACA,sDACAA,MACA,KCVAF,2CACA,SACA,OACA,SACA,eACA,WACA,mBACA,YACA,uCACA,wCACA,4CACA,QACA,oBACA,YACA,cACA,WACA,cACA,gBACA,UACAM,EACAC,GACAC,EACAC,UACAC,MACAC,cACAC,cACAC,UACAC,WACAC,eACAC,SACAC,WACAC,OACAC,SACA,CACA,kBAEAC,yFACAC,4BAEAC,WACAC,aACAC,gBACAC,eACAC,eACAC,WACA,EAEAC,YACAC,qBACA,4BACA,0CACA,CACA,EAaA,0CACA,eAaA,uCACAC,uBACAC,4BACA,6DACAC,oCACAC,uDACAC,qCACAC,mDAEAzB,wCACAA,yCACAwB,mBACAxB,sBACAsB,8CAEA,6BACA,GACAD,4BACA,6DACAK,4CACAC,0CACAL,oCACAC,uDACAC,qCACAC,mDAEAzB,yCACAA,wCACAyB,2DACAD,mBACAxB,2BACAA,yBACAsB,+DAEAC,4BACAvB,qBACA,GACAqB,8BACA,gBACAO,mFACAC,uDACAH,4CACAC,0CACA7B,iBACAE,yBAEA0B,4BACAtB,YACA0B,oBACA,GACA,CACAJ,qDACAK,wDACAC,sCACAC,2DACAC,0BACAC,0CACAC,wCACAC,gDACAA,aACApC,yBACAoB,IACAiB,oCACA,EACAC,KACAD,mCACA,CACA,GACAjB,mBACAa,gCACAtC,wEACA4C,eACAC,mCACAC,0CAEA,EACA,GACArB,oBACAa,6BACAtC,yEACA4C,eACAC,mCACAC,2CAEA,EACA,GAEAxC,eACAyC,gBACAC,YACAC,WACAC,mBACAC,mBACAC,4BACA,uCACAxC,QACAuC,qBACAE,sBACAC,WACA,+FACAf,eACA,CACAgB,WACA,2GACA,CACAC,cACAC,eACAC,SACA,CACAX,YACAC,eACAE,mBACAS,QACA,EACA,CACAZ,YACAC,aACAE,mBACAS,QACA,EACA,CACAC,mCACA5D,4EACA4C,eACA,+BACAE,2CAEA,EACA,CACA,EACA,GAEAL,aACAnC,eACAyC,eACAC,YACAC,cACAC,qBACAE,0BACA,yBACAS,sGACA,EAEA,GAEAzD,6BAEAA,2BACAA,yBAEA,GACAqB,2BACA,6BACA,GACAA,4BACA,6BACA,GACAA,uBAsBA,8BAEAI,iCACAiC,mBACA1D,0BACA0C,4BAEAA,2BAEA,EACA,CAEA,wBAsEA,yBACAlB,sBACAmC,mBACAC,UACAC,mBACA,kBACAC,KACAC,0BACA5B,gCACAW,cACAkB,kBACAC,aACA,GAEAC,MACA,CAEAC,QACAA,SACA5D,WACAV,GACA,sJACAsE,iBACAA,QACAA,UACA,CACA,WACAC,QACA,EACA,WACAA,QACA,EACA,CAEAA,UAGAtE,uBACAA,sCACAW,gCACA,GAGA2D,SAEA,EACAC,yBACAH,sBACA,CACA,EACA,CAvHA,cACAH,iBAEAxC,UACAF,sDACAoB,wDACAC,uDACA,GACArB,wCACAiD,8DACA,GACAjD,6BACA,kBACAqB,4BAEAjC,kEACA8D,aACA,GAGAD,SACA,GACAjD,gCAEAG,qCACAA,kBACA,GACAH,oCACAG,uDACA,kBACAgD,+BACAC,oCAEAA,aAEAvC,wCAEA,EACA,GAEAX,oBACAmD,UACAC,YACAC,sBACAC,2CACA,+BAGAC,oCAEA,+CACA,MACAhF,yCACA,8CAEA,GAEAgF,4BACArE,wDAIAsD,iBAGAzD,kCACA,CACA,EAqDA,CAzJA,gBACAsB,mFACAmD,6BACAlD,gDACAN,uDACAE,mDACA,gBAGAuD,qBACAC,eAGArF,sCAEA6C,6BACAC,mCACAA,2BACA,EAwIA,GACAwC,YACA,CACA,GC5ZA5F,wDACAA,MCFA,2CACA,SACA,WACA,mCACA,gCAEA,4BACA,aAEA,iCAEA,OACA6F,uBAEAjE,YACA8B,oBACAnC,4EACAC,0DACAC,wDACAC,wDACAC,kDACAmE,gEACAC,0DACA,EACA,CACA,CACA,GACA/F,MC3BA,8CACA,aAEA,OACA,YACA,SACA,mCACA,CACA,CACA,CACA,GCTA,gOACA,ulFCDAA,2DACAA,MCFA","names":["define","helpers","buffer","escapeExpression","helper","stack1","$","__","_","component","hider","switchFactory","buttonFactory","layoutTpl","listingTpl","packageMetaTpl","asyncLib","confirmBox","dialog","feedback","_fileTypeFilters","_fileExtFilter","_defaults","loadUrl","disableUrl","enableUrl","verifyUrl","addUrl","pciManager","open","setTemplate","on","$title","$uploader","$uploadForm","$switcher","$fileContainer","$placeholder","urls","$fileSelector","interactions","pciDownloadButton","pciswitch","pciUnregisterButton","$li","typeIdentifier","pciIdentifier","runtimeOnly","active","off","data","listing","self","id","type","icon","label","class","renderTo","heading","message","content","autoRender","autoDestroy","buttons","close","onDeleteBtn","window","e","url","file","loaded","ok","selectedFiles","version","model","cb","r","done","failed","errors","encodeHtml","filename","packageMeta","upload","multiple","uploadUrl","fileSelect","files","$container","initEventListeners","initUploader","init","start","unregisterUrl","exportPciUrl"],"sources":["../pciManager/tpl/layout!tpl","../pciManager/tpl/listing!tpl","../pciManager/tpl/packageMeta!tpl","../pciManager/pciManager.js","css!qtiItemPciCss/pci-manager","../controller/pciManager/index.js","../controller/routes.js","onLayerEnd0.js","module-create.js","/home/alberto/workspace/oat/taocloud-ami-luoss/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\ndefine('tpl!qtiItemPci/pciManager/tpl/layout', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"pcimgr resourcemgr\\\">\\n\\n    <section class=\\\"file-selector\\\">\\n        <h1>\\n            <div class=\\\"title-container lft\\\">\\n                <span class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Manage custom interactions\", options) : helperMissing.call(depth0, \"__\", \"Manage custom interactions\", options)))\n    + \"</span>\\n            </div>\\n            <div class=\\\"upload-switcher rgt\\\">\\n                <a href=\\\"#\\\" class=\\\"btn-info small upload\\\"><span class=\\\"icon-add\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add Interaction\", options) : helperMissing.call(depth0, \"__\", \"Add Interaction\", options)))\n    + \"</a>\\n                <a href=\\\"#\\\" class=\\\"btn-info small listing hidden\\\"><span class=\\\"icon-undo\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Back to listing\", options) : helperMissing.call(depth0, \"__\", \"Back to listing\", options)))\n    + \"</a>\\n            </div>\\n        </h1>\\n\\n        <div class=\\\"empty\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No Custom Interaction\", options) : helperMissing.call(depth0, \"__\", \"No Custom Interaction\", options)))\n    + \"\\n        </div>\\n\\n        <ul class=\\\"files\\\"></ul>\\n\\n        <div class=\\\"file-upload-container hidden\\\"></div>\\n    </section>\\n\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!qtiItemPci/pciManager/tpl/listing', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n<li data-type-identifier=\\\"\";\n  if (helper = helpers.typeIdentifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.typeIdentifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-pci-identifier=\\\"\";\n  if (helper = helpers.pci_identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.pci_identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"pci-list-element\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.enabled), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\n    <span class=\\\"desc truncate\\\">\\n        <span class=\\\"name\\\">(\";\n  if (helper = helpers.model) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.model); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.runtimeOnly), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \") - \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" - v\";\n  if (helper = helpers.version) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.version); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <span class=\\\"disable-tag\\\">- \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"disabled\", options) : helperMissing.call(depth0, \"__\", \"disabled\", options)))\n    + \"</span>\\n    </span>\\n\\n    <div class=\\\"actions\\\">\\n        <div class=\\\"pci-switch\\\"></div>\\n        <div class=\\\"pci-download-button\\\"></div>\\n        <div class=\\\"pci-unregister-button\\\"></div>\\n    </div>\\n</li>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \" pci-disabled\\\"\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \" <span class=\\\"runtime\\\">- runtime only</span>\";\n  }\n\n  buffer += \"<div class=\\\"action-header\\\">\\n        <span class=\\\"switch-header\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Enabled in item authoring\", options) : helperMissing.call(depth0, \"__\", \"Enabled in item authoring\", options)))\n    + \"</span>\\n    </div>\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.interactions), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  return buffer;\n  }); });\n","\ndefine('tpl!qtiItemPci/pciManager/tpl/packageMeta', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<span class=\\\"upload-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n<span class=\\\"upload-separator\\\"></span>\\n<span class=\\\"upload-identifier\\\">(\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"type : \", options) : helperMissing.call(depth0, \"__\", \"type : \", options)));\n  if (helper = helpers.model) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.model); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \", \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"id : \", options) : helperMissing.call(depth0, \"__\", \"id : \", options)));\n  if (helper = helpers.typeIdentifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.typeIdentifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \", \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"version : \", options) : helperMissing.call(depth0, \"__\", \"version : \", options)));\n  if (helper = helpers.version) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.version); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \")</span>\\n<span class=\\\"upload-separator\\\">-</span>\";\n  return buffer;\n  }); });\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2022 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('qtiItemPci/pciManager/pciManager',[\n    'jquery',\n    'i18n',\n    'lodash',\n    'ui/component',\n    'ui/hider',\n    'ui/switch/switch',\n    'ui/button',\n    'tpl!qtiItemPci/pciManager/tpl/layout',\n    'tpl!qtiItemPci/pciManager/tpl/listing',\n    'tpl!qtiItemPci/pciManager/tpl/packageMeta',\n    'async',\n    'ui/dialog/confirm',\n    'ui/dialog',\n    'ui/feedback',\n    'ui/modal',\n    'ui/uploader',\n    'ui/filesender'\n], function (\n    $,\n    __,\n    _,\n    component,\n    hider,\n    switchFactory,\n    buttonFactory,\n    layoutTpl,\n    listingTpl,\n    packageMetaTpl,\n    asyncLib,\n    confirmBox,\n    dialog,\n    feedback\n) {\n    'use strict';\n\n    const _fileTypeFilters = ['application/zip', 'application/x-zip-compressed', 'application/x-zip'],\n        _fileExtFilter = /.+\\.(zip)$/;\n\n    const _defaults = {\n        loadUrl: null,\n        disableUrl: null,\n        enableUrl: null,\n        verifyUrl: null,\n        addUrl: null\n    };\n\n    const pciManager = {\n        open: function open() {\n            this.trigger('showListing');\n            this.getElement().appendTo('.pci-manager');\n        }\n    };\n\n    /**\n     * Create a pci manager\n     *\n     * @param {Object} config\n     * @param {String} config.loadUrl - the service be called to load the list of pcis\n     * @param {String} config.verifyUrl - the service be called to verify a pci package\n     * @param {String} config.addUrl - the service be called to add a pci\n     * @param {String} config.enableUrl - the service be called to enable the pcis\n     * @param {String} config.disableUrl - the service be called to disable the pcis\n     * @returns {*}\n     */\n    return function pciManagerFactory(config) {\n        let listing = {};\n\n        /**\n         * Create pci manager component\n         *\n         * @returns {Object} a pciManager component\n         * @fires pciManager#loaded - when the pci manager is initially loaded\n         * @fires pciManager#showListing - when the list of pci is displayed\n         * @fires pciManager#hideListing - when the list of pci is hidden\n         * @fires pciManager#updateListing - when the list of pci is updated\n         * @fires pciManager#pciEnabled - when a pci is enabled\n         * @fires pciManager#pciDisabled - when a pci is pci-disabled\n         */\n        return component(pciManager, _defaults)\n            .setTemplate(layoutTpl)\n            .on('showListing', function () {\n                const $fileSelector = this.getElement().find('.file-selector'),\n                    $title = $fileSelector.find('.title'),\n                    $uploader = $fileSelector.find('.file-upload-container'),\n                    $uploadForm = $uploader.parent('form'),\n                    $switcher = $fileSelector.find('.upload-switcher a');\n\n                hider.show($switcher.filter('.upload'));\n                hider.hide($switcher.filter('.listing'));\n                $uploadForm.hide();\n                hider.hide($uploader);\n                $title.text(__('Manage custom interactions'));\n\n                this.trigger('updateListing');\n            })\n            .on('hideListing', function () {\n                const $fileSelector = this.getElement().find('.file-selector'),\n                    $fileContainer = $fileSelector.find('.files'),\n                    $placeholder = $fileSelector.find('.empty'),\n                    $title = $fileSelector.find('.title'),\n                    $uploader = $fileSelector.find('.file-upload-container'),\n                    $uploadForm = $uploader.parent('form'),\n                    $switcher = $fileSelector.find('.upload-switcher a');\n\n                hider.show($switcher.filter('.listing'));\n                hider.hide($switcher.filter('.upload'));\n                $switcher.filter('.listing').css({ display: 'inline-block' });\n                $uploadForm.show();\n                hider.hide($fileContainer);\n                hider.hide($placeholder);\n                $title.text(__('Upload new custom interaction (zip package)'));\n\n                $uploader.uploader('reset');\n                hider.show($uploader);\n            })\n            .on('updateListing', function () {\n                const self = this,\n                    urls = _.pick(this.config, ['disableUrl', 'enableUrl', 'unregisterUrl', 'exportPciUrl']),\n                    $fileSelector = this.getElement().find('.file-selector'),\n                    $fileContainer = $fileSelector.find('.files'),\n                    $placeholder = $fileSelector.find('.empty');\n                if (_.size(listing)) {\n                    hider.hide($placeholder);\n\n                    $fileContainer.empty().html(\n                        listingTpl({\n                            interactions: listing\n                        })\n                    );\n                    $fileContainer.find('.actions').each(function () {\n                        const pciDownloadButton = $(this).find('.pci-download-button');\n                        const pciswitch = $(this).find('.pci-switch');\n                        const pciUnregisterButton = $(this).find('.pci-unregister-button');\n                        const $li = $(this).closest('li');\n                        const typeIdentifier = $li.data('typeIdentifier');\n                        const pciIdentifier = $li.data('pciIdentifier');\n                        const runtimeOnly = listing[typeIdentifier].runtimeOnly;\n                        if (!runtimeOnly) {\n                            switchFactory(pciswitch, {\n                                on: {\n                                    active: !$li.hasClass('pci-disabled')\n                                },\n                                off: {\n                                    active: $li.hasClass('pci-disabled')\n                                }\n                            })\n                                .on('on', function () {\n                                    $li.removeClass('pci-disabled');\n                                    $.getJSON(urls.enableUrl, { typeIdentifier: typeIdentifier }, function (data) {\n                                        if (data.success) {\n                                            listing[typeIdentifier].enabled = true;\n                                            self.trigger('pciEnabled', typeIdentifier);\n                                        }\n                                    });\n                                })\n                                .on('off', function () {\n                                    $li.addClass('pci-disabled');\n                                    $.getJSON(urls.disableUrl, { typeIdentifier: typeIdentifier }, function (data) {\n                                        if (data.success) {\n                                            listing[typeIdentifier].enabled = false;\n                                            self.trigger('pciDisabled', typeIdentifier);\n                                        }\n                                    });\n                                });\n                        }\n                        buttonFactory({\n                            id: 'unregister',\n                            type: 'info',\n                            icon: 'bin',\n                            label: __('Delete'),\n                            class: 'unregister',\n                            renderTo: pciUnregisterButton\n                        }).on('click', function confirmDialog() {\n                            dialog({\n                                class: 'icon-warning',\n                                heading: __('Warning'),\n                                message: __(\n                                    'You are about to delete the Portable Custom Interaction <strong>%s</strong> from the system.',\n                                    typeIdentifier\n                                ),\n                                content: __(\n                                    'This action will affect all items that may be using it and cannot be undone. Please confirm your choice.'\n                                ),\n                                autoRender: true,\n                                autoDestroy: true,\n                                buttons: [\n                                    {\n                                        id: 'cancel',\n                                        type: 'regular',\n                                        label: __('Cancel'),\n                                        close: true\n                                    },\n                                    {\n                                        id: 'delete',\n                                        type: 'error',\n                                        label: __('Delete'),\n                                        close: true\n                                    }\n                                ],\n                                onDeleteBtn: function onDeleteBtn() {\n                                    $.getJSON(urls.unregisterUrl, { typeIdentifier: typeIdentifier }, function (data) {\n                                        if (data.success) {\n                                            delete listing[typeIdentifier];\n                                            self.trigger('pciDisabled', typeIdentifier);\n                                        }\n                                    });\n                                }\n                            });\n                        });\n\n                        if (!runtimeOnly) {\n                            buttonFactory({\n                                id: 'exportPci',\n                                type: 'info',\n                                icon: 'import',\n                                label: __('Download'),\n                                renderTo: pciDownloadButton\n                            }).on('click', function () {\n                                window.location =`${urls.exportPciUrl}?typeIdentifier=${typeIdentifier}&pciIdentifier=${pciIdentifier}`;\n                            });\n                        }\n                    });\n\n                    hider.show($fileContainer);\n                } else {\n                    hider.hide($fileContainer);\n                    hider.show($placeholder);\n                }\n            })\n            .on('pciEnabled', function () {\n                this.trigger('updateListing');\n            })\n            .on('pciDisabled', function () {\n                this.trigger('updateListing');\n            })\n            .on('render', function () {\n                //init variables:\n                const self = this,\n                    urls = _.pick(this.config, ['loadUrl', 'disableUrl', 'enableUrl', 'verifyUrl', 'addUrl']),\n                    $container = this.getElement(),\n                    $fileSelector = $container.find('.file-selector'),\n                    $uploader = $fileSelector.find('.file-upload-container'),\n                    $switcher = $fileSelector.find('.upload-switcher a');\n                let $uploadForm;\n\n                //init event listeners\n                initEventListeners();\n                initUploader();\n\n                //load list of custom interactions from server\n                $.getJSON(urls.loadUrl, function (data) {\n                    //note : init as empty object and not array otherwise _.size will fail later\n                    listing = _.size(data) ? data : {};\n                    self.trigger('updateListing', data);\n                    self.trigger('loaded', data);\n                });\n\n                function initEventListeners() {\n                    //switch to upload mode\n                    $switcher.on('click', function (e) {\n                        e.preventDefault();\n                        if (hider.isHidden($uploader)) {\n                            self.trigger('hideListing');\n                        } else {\n                            self.trigger('showListing');\n                        }\n                    });\n                }\n\n                function initUploader() {\n                    let errors = [],\n                        selectedFiles = {};\n\n                    $uploader\n                        .on('upload.uploader', function (e, file, interactionHook) {\n                            listing[interactionHook.typeIdentifier] = interactionHook;\n                            self.trigger('pciAdded', interactionHook.typeIdentifier);\n                        })\n                        .on('fail.uploader', function (e, file, err) {\n                            errors.push(__('Unable to upload file %s : %s', file.name, err));\n                        })\n                        .on('end.uploader', function () {\n                            if (errors.length === 0) {\n                                self.trigger('showListing');\n                            } else {\n                                feedback().error(`<ul><li>${errors.join('</li><li>')}</li></ul>`, {\n                                    encodeHtml: false\n                                });\n                            }\n                            //reset errors\n                            errors = [];\n                        })\n                        .on('create.uploader', function () {\n                            //get ref to the uploadForm for later verification usage\n                            $uploadForm = $uploader.parent('form');\n                            $uploadForm.hide();\n                        })\n                        .on('fileselect.uploader', function () {\n                            $uploadForm.find('li[data-file-name]').each(function () {\n                                const $li = $(this),\n                                    filename = $li.data('file-name'),\n                                    packageMeta = selectedFiles[filename];\n\n                                if (packageMeta) {\n                                    //update label:\n                                    $li.prepend(packageMetaTpl(packageMeta));\n                                }\n                            });\n                        });\n\n                    $uploader.uploader({\n                        upload: true,\n                        multiple: true,\n                        uploadUrl: urls.addUrl,\n                        fileSelect: function fileSelect(files, done) {\n                            const givenLength = files.length;\n\n                            //check the mime-type\n                            files = _.filter(files, function (file) {\n                                // for some weird reasons some browsers have quotes around the file type\n                                const checkType = file.type.replace(/(\"|')/g, '');\n                                return (\n                                    _.contains(_fileTypeFilters, checkType) ||\n                                    (checkType === '' && _fileExtFilter.test(file.name))\n                                );\n                            });\n\n                            if (files.length !== givenLength) {\n                                feedback().error(__('Invalid files have been removed'));\n                            }\n\n                            //reset selectedFiles list\n                            selectedFiles = {};\n\n                            //verify selected files\n                            asyncLib.filter(files, verify, done);\n                        }\n                    });\n\n                    function verify(file, cb) {\n                        $uploadForm.sendfile({\n                            url: urls.verifyUrl,\n                            file: file,\n                            loaded: function (r) {\n                                function done(ok) {\n                                    if (ok) {\n                                        selectedFiles[file.name] = {\n                                            typeIdentifier: r.typeIdentifier,\n                                            label: r.label,\n                                            version: r.version,\n                                            model: r.model\n                                        };\n                                    }\n                                    cb(ok);\n                                }\n\n                                if (r.valid) {\n                                    if (r.exists) {\n                                        confirmBox(\n                                            __(\n                                                'There is already one interaction with the same identifier \"%s\" (label : \"%s\") and same version : %s. Do you want to override the existing one ?',\n                                                r.typeIdentifier,\n                                                r.label,\n                                                r.version\n                                            ),\n                                            function () {\n                                                done(true);\n                                            },\n                                            function () {\n                                                done(false);\n                                            }\n                                        );\n                                    } else {\n                                        done(true);\n                                    }\n                                } else {\n                                    if (_.isArray(r.messages)) {\n                                        _.forEach(r.messages, function (report) {\n                                            feedback().error(report.message);\n                                        });\n                                    }\n\n                                    done(false);\n                                }\n                            },\n                            failed: function (message) {\n                                cb(new Error(message));\n                            }\n                        });\n                    }\n                }\n            })\n            .init(config);\n    };\n});\n\n","\ndefine('css!qtiItemPciCss/pci-manager',[],function(){});\n","define('qtiItemPci/controller/pciManager/index',[\n    'jquery',\n    'util/url',\n    'qtiItemPci/pciManager/pciManager',\n    'css!qtiItemPciCss/pci-manager'\n\n], function ($, url, pciManager) {\n    'use strict';\n\n    var $container = $('.pci-manager');\n\n    return {\n        start: function start() {\n\n            pciManager({\n                renderTo: $container,\n                loadUrl : url.route('getRegisteredImplementations', 'PciManager', 'qtiItemPci'),\n                disableUrl : url.route('disable', 'PciManager', 'qtiItemPci'),\n                enableUrl : url.route('enable', 'PciManager', 'qtiItemPci'),\n                verifyUrl : url.route('verify', 'PciManager', 'qtiItemPci'),\n                addUrl : url.route('add', 'PciManager', 'qtiItemPci'),\n                unregisterUrl: url.route('unregister', 'PciManager', 'qtiItemPci'),\n                exportPciUrl: url.route('export', 'PciManager', 'qtiItemPci')\n            })\n        }\n    };\n});\n","define('qtiItemPci/controller/routes',[],function () {\n    'use strict';\n\n    return {\n        'PciManager': {\n            'actions': {\n                'index': 'controller/pciManager/index'\n            }\n        }\n    }\n});\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.pci-manager{margin:auto auto;width:80%}.pci-manager .pcimgr{max-width:100%}.pci-manager .resourcemgr{width:100%}.pci-manager-trigger:before{margin-right:5px;font-size:10.5px;font-size:1.05rem;font-family:\\'tao\\' !important;speak:never;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\\\"\\\\e61c\\\"}.pcimgr .file-selector{display:block;min-height:400px;min-width:100%;margin-bottom:20px}.pcimgr .file-selector .title-container{margin-right:75px}.pcimgr .file-selector .title-container .title{margin-right:0}.pcimgr .file-selector .note{color:#0e5d91;font-weight:bold;margin:0 3px}.pcimgr .file-selector .note-container{position:absolute;bottom:-30px}.pcimgr .file-selector ul.files{overflow-y:auto;min-height:300px}.pcimgr .file-selector ul.files div.action-header{position:relative;height:2rem}.pcimgr .file-selector ul.files div.action-header span.switch-header{position:absolute}.pcimgr .file-selector .pci-list-element{cursor:default !important}.pcimgr .file-selector .pci-list-element span.runtime{color:#0e5d91}.pcimgr .file-selector .pci-list-element div.actions{top:5px !important;width:auto !important;height:auto !important;line-height:1.4}.pcimgr .file-selector .pci-list-element div.actions .pci-switch{margin-right:2rem;position:relative;left:0;top:1px;display:inline}.pcimgr .file-selector .pci-list-element div.actions .pci-unregister-button{position:relative;display:inline;margin-right:2rem}.pcimgr .file-selector .pci-list-element div.actions .pci-download-button{position:relative;display:inline}.pcimgr .file-selector .pci-list-element .button-disable{height:18px;padding:4px 6px;display:inline-block}.pcimgr .file-selector .pci-list-element .button-enable{height:18px;padding:4px 6px;display:none}.pcimgr .file-selector .pci-list-element .disable-tag{display:none;font-style:italic}.pcimgr .file-selector .pci-list-element.pci-disabled{color:#a7a7a7}.pcimgr .file-selector .pci-list-element.pci-disabled:hover{background:#ecf2f6}.pcimgr .file-selector .pci-list-element.pci-disabled .button-disable{display:none}.pcimgr .file-selector .pci-list-element.pci-disabled .button-enable{display:inline-block}.pcimgr .file-selector .pci-list-element.pci-disabled .desc{font-style:italic}.pcimgr .file-selector .pci-list-element.pci-disabled .disable-tag{display:inline-block}.pcimgr .file-selector .file-upload-container{display:block}.uploader .upload-separator{margin:0 2px;color:#333}.uploader .upload-label{font-weight:bold}.uploader .upload-identifier{color:#333}\\n\\n/*# sourceMappingURL=qtiItemPciCss/pci-manager.css.map */');\n","\ndefine(\"qtiItemPci/loader/qtiItemPci.bundle\", function(){});\n","define(\"qtiItemPci/loader/qtiItemPci.min\", [\"taoItems/loader/taoItems.min\",\"taoQtiItem/loader/taoQtiItem.min\"], function(){});\n"]}