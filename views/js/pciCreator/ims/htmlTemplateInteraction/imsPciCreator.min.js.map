{"version":3,"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","compilerInfo","merge","stack1","helper","options","buffer","helperMissing","escapeExpression","__","hash","call","identifier","serial","html","stateFactory","Question","formElement","simpleEditor","containerEditor","formTpl","configChangeCallBack","interaction","value","name","prop","triggerPci","getProperties","stateQuestion","extend","$container","widget","$prompt","find","element","create","change","text","updateMarkup","markup","markupSelector","related","areaBroker","getAreaBroker","destroy","prototype","initForm","$form","response","getResponseDeclaration","attr","initWidget","setChangeCallbacks","i","id","factory","states","QuestionState","createBundle","Widget","interactionWidget","clone","initCreator","registerStates","prompt","markupTpl","getTypeIdentifier","getWidget","getDefaultProperties","isReviewMode","afterCreate","getMarkupTemplate","getMarkupData","pci","defaultData","Object","assign","IMSPCI"],"sources":["../build/config-wrap-start-default.js","../../../qtiItemPci/views/js/pciCreator/ims/htmlTemplateInteraction/creator/tpl/propertiesForm!tpl","../../../qtiItemPci/views/js/pciCreator/ims/htmlTemplateInteraction/creator/widget/states/Question.js","../../../qtiItemPci/views/js/pciCreator/ims/htmlTemplateInteraction/creator/widget/states/states.js","../../../qtiItemPci/views/js/pciCreator/ims/htmlTemplateInteraction/creator/widget/Widget.js","../../../qtiItemPci/views/js/pciCreator/ims/htmlTemplateInteraction/creator/tpl/markup!tpl","../../../qtiItemPci/views/js/pciCreator/ims/htmlTemplateInteraction/imsPciCreator.js","../build/config-wrap-end-default.js"],"sourcesContent":["\n","\ndefine('tpl!htmlTemplateInteraction/creator/tpl/propertiesForm', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"panel\\\">\\n    <label for=\\\"\\\" class=\\\"has-icon\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Response identifier\", options) : helperMissing.call(depth0, \"__\", \"Response identifier\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <div class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options)))\n    + \"</div>\\n\\n    <input type=\\\"text\\\"\\n           name=\\\"identifier\\\"\\n           value=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\\n           placeholder=\\\"e.g. RESPONSE\\\"\\n           data-validate=\\\"$notEmpty; $qtiIdentifier; $availableIdentifier(serial=\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\">\\n</div>\\n\\n<hr />\\n\\n<div class=\\\"panel\\\">\\n    <label for=\\\"html\\\" class=\\\"has-icon\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"HTML Template\", options) : helperMissing.call(depth0, \"__\", \"HTML Template\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The HTML template provided to the PCI's iframe. Can be a full HTML document or just body contents. Can contain inline styles or images, but no scripts. For a single or multiple response elements, add 'name=\\\"the-name\\\"' and 'data-response' attributes to each one. For wordcount display, add an empty element with 'data-wordcount-for=\\\"the-name\\\"' attribute.\", options) : helperMissing.call(depth0, \"__\", \"The HTML template provided to the PCI's iframe. Can be a full HTML document or just body contents. Can contain inline styles or images, but no scripts. For a single or multiple response elements, add 'name=\\\"the-name\\\"' and 'data-response' attributes to each one. For wordcount display, add an empty element with 'data-wordcount-for=\\\"the-name\\\"' attribute.\", options)))\n    + \"</span>\\n    <input type=\\\"text\\\"\\n           id=\\\"html\\\"\\n           name=\\\"html\\\"\\n           value=\\\"\";\n  if (helper = helpers.html) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.html); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\\n           placeholder=\\\"\\\"\\n           data-validate=\\\"$notEmpty;\\\">\\n</div>\";\n  return buffer;\n  }); });\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2024 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('htmlTemplateInteraction/creator/widget/states/Question',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Question',\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\n    'taoQtiItem/qtiCreator/editor/simpleContentEditableElement',\n    'taoQtiItem/qtiCreator/editor/containerEditor',\n    'tpl!htmlTemplateInteraction/creator/tpl/propertiesForm'\n], function(stateFactory, Question, formElement, simpleEditor, containerEditor, formTpl) {\n    'use strict';\n\n    const stateQuestion = stateFactory.extend(\n        Question,\n        function enterQuestionState() {\n            const $container = this.widget.$container;\n            const $prompt = $container.find('.prompt');\n            const interaction = this.widget.element;\n\n            containerEditor.create($prompt, {\n                change: function change(text) {\n                    interaction.data('prompt', text);\n                    interaction.updateMarkup();\n                },\n                markup: interaction.markup,\n                markupSelector: '.prompt',\n                related: interaction,\n                areaBroker: this.widget.getAreaBroker()\n            });\n        },\n        function leaveQuestionState() {\n            const $container = this.widget.$container;\n            const $prompt = $container.find('.prompt');\n\n            simpleEditor.destroy(this.widget.$container);\n            containerEditor.destroy($prompt);\n        }\n    );\n\n    /**\n     * Change callback of form values\n     * @param {Object} interaction - TAO Authoring's CustomInteraction model\n     * @param {*} value\n     * @param {String} name\n     */\n    function configChangeCallBack(interaction, value, name) {\n        interaction.prop(name, value);\n        interaction.triggerPci('configChange', [interaction.getProperties()]);\n    }\n\n    /**\n     * Setup the property panel\n     */\n    stateQuestion.prototype.initForm = function() {\n        const interaction = this.widget.element;\n        const $form = this.widget.$form;\n        const response = interaction.getResponseDeclaration();\n\n        //render the form using the form template\n        $form.html(formTpl({\n            serial : response.serial,\n            identifier : interaction.attr('responseIdentifier'),\n            html: interaction.prop('html')\n        }));\n\n        //init form javascript\n        formElement.initWidget($form);\n\n        //init data change callbacks\n        formElement.setChangeCallbacks($form, interaction, {\n            identifier: function(i, value){\n                response.id(value);\n                interaction.attr('responseIdentifier', value);\n            },\n            html: function(i, value){\n                configChangeCallBack(i, value, 'html');\n            }\n        });\n    };\n\n    return stateQuestion;\n});\n\n","define('htmlTemplateInteraction/creator/widget/states/states',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states',\n    'htmlTemplateInteraction/creator/widget/states/Question'\n], function (factory, states, QuestionState) {\n    'use strict';\n    return factory.createBundle(states, [QuestionState], ['answer', 'correct', 'map']);\n});\n\n","define('htmlTemplateInteraction/creator/widget/Widget',[\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget',\n    'htmlTemplateInteraction/creator/widget/states/states',\n], function (Widget, states) {\n    'use strict';\n\n    const interactionWidget = Widget.clone();\n\n    interactionWidget.initCreator = function () {\n        this.registerStates(states);\n        Widget.initCreator.call(this);\n    };\n\n    return interactionWidget;\n});\n\n","\ndefine('tpl!htmlTemplateInteraction/creator/tpl/markup', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"htmlTemplateInteraction\\\">\\n    <div class=\\\"prompt\\\">\";\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n    \\n</div>\";\n  return buffer;\n  }); });\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2024 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('htmlTemplateInteraction/imsPciCreator',[\n    'htmlTemplateInteraction/creator/widget/Widget',\n    'tpl!htmlTemplateInteraction/creator/tpl/markup'\n], function (Widget, markupTpl) {\n    'use strict';\n\n    const typeIdentifier = 'htmlTemplateInteraction';\n\n    return {\n\n        /**\n         * (required) Get the typeIdentifier of the custom interaction\n         *\n         * @returns {String}\n         */\n        getTypeIdentifier() {\n            return typeIdentifier;\n        },\n\n        /**\n         * (required) Get the widget prototype\n         * Used in the renderer\n         *\n         * @returns {Object} Widget\n         */\n        getWidget() {\n            return Widget;\n        },\n\n        /**\n         * (optional) Get the default properties values of the pci.\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        getDefaultProperties() {\n            return {\n                html: '<form><textarea name=\"text1\" data-response></textarea><p data-wordcount-for=\"text1\"></p></form>',\n                isReviewMode: false\n            };\n        },\n\n        /**\n         * (optional) Callback to execute on the\n         * new pci instance creation\n         *\n         * @returns {Object}\n         */\n        afterCreate() {\n\n        },\n\n        /**\n         * (required) Gives the qti pci markup template\n         *\n         * @returns {function} template function\n         */\n        getMarkupTemplate() {\n            return markupTpl;\n        },\n\n        /**\n         * (optional) Allows passing additional data to xml template (see templateData)\n         *\n         * @returns {Object} template data\n         */\n        getMarkupData(pci, defaultData) {\n            return Object.assign({\n                prompt: pci.data('prompt')\n            }, defaultData);\n        }\n    };\n});\n\n","define(['htmlTemplateInteraction/imsPciCreator'],function(IMSPCI){return IMSPCI});\n"],"mappings":"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"}