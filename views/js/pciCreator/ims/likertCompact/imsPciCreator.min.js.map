{"version":3,"sources":["../../../qtiItemPci/views/js/pciCreator/ims/likertCompact/likert/creator/tpl/propertiesForm!tpl","../../../qtiItemPci/views/js/pciCreator/ims/likertCompact/likert/creator/widget/states/Question.js","../../../qtiItemPci/views/js/pciCreator/ims/likertCompact/likert/creator/widget/states/Answer.js","../../../qtiItemPci/views/js/pciCreator/ims/likertCompact/likert/creator/widget/states/states.js","../../../qtiItemPci/views/js/pciCreator/ims/likertCompact/likert/creator/widget/Widget.js","../../../qtiItemPci/views/js/pciCreator/ims/likertCompact/likert/creator/tpl/markup!tpl","../../../qtiItemPci/views/js/pciCreator/ims/likertCompact/imsPciCreator.js"],"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","program1","stack1","helper","buffer","escapeExpression","key","functionType","apply","call","selected","hash","inverse","self","noop","fn","program","program2","label","this","compilerInfo","merge","options","helperMissing","__","each","levels","stateFactory","Question","formElement","simpleEditor","formTpl","_","LikertInteractionStateQuestion","extend","$container","widget","interaction","element","create","text","prop","destroy","prototype","initForm","_widget","$form","response","getResponseDeclaration","level","parseInt","levelData","lvl","html","serial","initWidget","setChangeCallbacks","value","triggerPci","Answer","answerStateHelper","InteractionStateAnswer","$original","find","initResponseForm","rpTemplates","factory","states","createBundle","arguments","Widget","LikertScaleInteractionWidget","clone","initCreator","registerStates","setTemplate","prompt","markupTpl","getTypeIdentifier","getWidget","getDefaultProperties","pci","label-min","label-max","afterCreate","getMarkupTemplate","getMarkupData","defaultData","IMSPCI"],"mappings":"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","file":"imsPciCreator.min.js","sourcesContent":["\ndefine('tpl!likertCompactInteraction/likert/creator/tpl/propertiesForm', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <option value=\\\"\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.selected), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</option>\\n        \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"selected=\\\"selected\\\"\";\n  }\n\n  buffer += \"<div class=\\\"panel\\\">\\n    <label for=\\\"level\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Level\", options) : helperMissing.call(depth0, \"__\", \"Level\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Scale size\", options) : helperMissing.call(depth0, \"__\", \"Scale size\", options)))\n    + \"</span>\\n    <select name=\\\"level\\\" class=\\\"select2\\\" data-has-search=\\\"false\\\">\\n        \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.levels), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </select>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likertCompactInteraction/likert/creator/widget/states/Question',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Question',\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\n    'taoQtiItem/qtiCreator/editor/simpleContentEditableElement',\n    'tpl!likertCompactInteraction/likert/creator/tpl/propertiesForm',\n    'lodash',\n    'jquery'\n], function(stateFactory, Question, formElement, simpleEditor, formTpl, _){\n    'use strict';\n\n    var LikertInteractionStateQuestion = stateFactory.extend(Question, function(){\n\n        var $container = this.widget.$container,\n            interaction = this.widget.element;\n\n        simpleEditor.create($container, '.likert-label-min', function(text){\n            interaction.prop('label-min', text);\n        });\n\n        simpleEditor.create($container, '.likert-label-max', function(text){\n            interaction.prop('label-max', text);\n        });\n\n    }, function(){\n\n        simpleEditor.destroy(this.widget.$container);\n    });\n\n    LikertInteractionStateQuestion.prototype.initForm = function(){\n\n        var _widget = this.widget,\n            $form = _widget.$form,\n            interaction = _widget.element,\n            response = interaction.getResponseDeclaration(),\n            level = parseInt(interaction.prop('level')) || 5,\n            levels = [5, 7, 9],\n            levelData = {};\n\n        //build select option data for the template\n        _.each(levels, function(lvl){\n            levelData[lvl] = {\n                label : lvl,\n                selected : (lvl === level)\n            };\n        });\n\n        //render the form using the form template\n        $form.html(formTpl({\n            serial : response.serial,\n            levels : levelData\n        }));\n\n        //init form javascript\n        formElement.initWidget($form);\n\n        //init data change callbacks\n        formElement.setChangeCallbacks($form, interaction, {\n            level : function(interaction, value){\n\n                //update the pci property value:\n                interaction.prop('level', value);\n                \n                //trigger change event:\n                interaction.triggerPci('levelchange', [parseInt(value)]);\n            }\n        });\n\n    };\n\n    return LikertInteractionStateQuestion;\n});\n\n","define('likertCompactInteraction/likert/creator/widget/states/Answer',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Answer',\n    'taoQtiItem/qtiCreator/widgets/interactions/helpers/answerState',\n    'taoQtiItem/qtiCreator/widgets/helpers/content'\n], function(stateFactory, Answer, answerStateHelper){\n    'use strict';\n\n    var InteractionStateAnswer = stateFactory.extend(Answer, function initAnswerState(){\n        this.widget.$original.find('.likert input').prop('disabled', true);\n    }, function exitAnswerState(){\n        this.widget.$original.find('.likert input').prop('disabled', false);\n    });\n\n    InteractionStateAnswer.prototype.initResponseForm = function initResponseForm(){\n\n        answerStateHelper.initResponseForm(this.widget, {rpTemplates : ['CUSTOM', 'NONE']});\n    };\n\n    return InteractionStateAnswer;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likertCompactInteraction/likert/creator/widget/states/states',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states',\n    'likertCompactInteraction/likert/creator/widget/states/Question',\n    'likertCompactInteraction/likert/creator/widget/states/Answer'\n], function(factory, states){\n    'use strict';\n    return factory.createBundle(states, arguments, ['correct', 'map']);\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likertCompactInteraction/likert/creator/widget/Widget',[\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget',\n    'likertCompactInteraction/likert/creator/widget/states/states'\n], function(Widget, states){\n    'use strict';\n\n    var LikertScaleInteractionWidget = Widget.clone();\n\n    LikertScaleInteractionWidget.initCreator = function(){\n\n        this.registerStates(states);\n\n        Widget.initCreator.call(this);\n\n        //for existing likert scale PCI, ensure that the rp template is always NONE\n        this.element.getResponseDeclaration().setTemplate('NONE');\n    };\n    \n    return LikertScaleInteractionWidget;\n});\n","\ndefine('tpl!likertCompactInteraction/likert/creator/tpl/markup', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"likertInteraction\\\">\\n    <style>\\n        .likertInteraction ul.likert{\\n            list-style-type: none;\\n            margin: 0 5px;\\n            padding: 0;\\n            display: inline-block;\\n            position: relative;\\n            top: 7px;\\n        }\\n        .likertInteraction ul.likert li{\\n            float: left;\\n            text-align: left;\\n            list-style-type: none;\\n        }\\n    </style>\\n    <div class=\\\"prompt\\\">\";\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n    <ul class=\\\"likert\\\"></ul>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likertCompactInteraction/imsPciCreator',[\n    'lodash',\n    'likertCompactInteraction/likert/creator/widget/Widget',\n    'tpl!likertCompactInteraction/likert/creator/tpl/markup'\n], function(_, Widget, markupTpl){\n    'use strict';\n\n    var _typeIdentifier = 'likertCompactInteraction';\n\n    return {\n        /**\n         * (required) Get the typeIdentifier of the custom interaction\n         * \n         * @returns {String}\n         */\n        getTypeIdentifier : function(){\n            return _typeIdentifier;\n        },\n        /**\n         * (required) Get the widget prototype\n         * Used in the renderer\n         * \n         * @returns {Object} Widget\n         */\n        getWidget : function(){\n            return Widget;\n        },\n        /**\n         * (optional) Get the default properties values of the pci.\n         * Used on new pci instance creation\n         * \n         * @returns {Object}\n         */\n        getDefaultProperties : function(pci){\n            return {\n                level : 5,\n                'label-min' : 'min',\n                'label-max' : 'max'\n            };\n        },\n        /**\n         * (optional) Callback to execute on the \n         * Used on new pci instance creation\n         * \n         * @returns {Object}\n         */\n        afterCreate : function(pci){\n            //always set the NONE response processing mode to likert scale\n            pci.getResponseDeclaration().setTemplate('NONE');\n        },\n        /**\n         * (required) Gives the qti pci xml template \n         * \n         * @returns {function} handlebar template\n         */\n        getMarkupTemplate : function(){\n            return markupTpl;\n        },\n        /**\n         * (optional) Allows passing additional data to xml template\n         * \n         * @returns {function} handlebar template\n         */\n        getMarkupData : function(pci, defaultData){\n            defaultData.prompt = pci.data('prompt');\n            return defaultData;\n        }\n    };\n});\n"]}