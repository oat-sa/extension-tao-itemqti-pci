{"version":3,"sources":["../../../qtiItemPci/views/js/pciCreator/dev/likertNavigateLock/creator/tpl/propertiesForm!tpl","../../../qtiItemPci/views/js/pciCreator/dev/likertNavigateLock/creator/widget/states/Question.js","../../../qtiItemPci/views/js/pciCreator/dev/likertNavigateLock/creator/widget/states/Answer.js","../../../qtiItemPci/views/js/pciCreator/dev/likertNavigateLock/creator/widget/states/states.js","../../../qtiItemPci/views/js/pciCreator/dev/likertNavigateLock/creator/widget/Widget.js","../../../qtiItemPci/views/js/pciCreator/dev/likertNavigateLock/creator/tpl/markup!tpl","../../../qtiItemPci/views/js/pciCreator/dev/likertNavigateLock/pciCreator.js"],"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","program1","stack1","helper","buffer","escapeExpression","key","functionType","apply","call","selected","hash","inverse","self","noop","fn","program","program2","label","program4","this","compilerInfo","merge","options","helperMissing","__","each","levels","navigationLock","stateFactory","Question","formElement","simpleEditor","containerEditor","formTpl","_","$","LikertInteractionStateQuestion","extend","$container","widget","$prompt","find","interaction","element","create","change","text","updateMarkup","markup","markupSelector","related","areaBroker","getAreaBroker","prop","destroy","prototype","initForm","_widget","$form","response","getResponseDeclaration","level","parseInt","levelData","lvl","html","serial","initWidget","setChangeCallbacks","value","triggerPci","Answer","answerStateHelper","InteractionStateAnswer","$original","initResponseForm","rpTemplates","factory","states","createBundle","arguments","Widget","likerNavigateLockWidget","clone","initCreator","registerStates","setTemplate","prompt","markupTpl","getTypeIdentifier","getWidget","getDefaultProperties","pci","label-min","label-max","afterCreate","getMarkupTemplate","getMarkupData","defaultData","PCI"],"mappings":"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","file":"pciCreator.min.js","sourcesContent":["\ndefine('tpl!likerNavigateLock/creator/tpl/propertiesForm', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <option value=\\\"\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.selected), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</option>\\n        \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"selected=\\\"selected\\\"\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"checked=\\\"checked\\\"\";\n  }\n\n  buffer += \"<div class=\\\"panel\\\">\\n    <label for=\\\"level\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Level\", options) : helperMissing.call(depth0, \"__\", \"Level\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Scale size\", options) : helperMissing.call(depth0, \"__\", \"Scale size\", options)))\n    + \"</span>\\n    <select name=\\\"level\\\" class=\\\"select2\\\" data-has-search=\\\"false\\\">\\n        \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.levels), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </select>\\n</div>\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"navigationLock\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.navigationLock), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Navigation lock\", options) : helperMissing.call(depth0, \"__\", \"Navigation lock\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"the test runner navigation to be disabled until the test-taker gave an answer to it.\", options) : helperMissing.call(depth0, \"__\", \"the test runner navigation to be disabled until the test-taker gave an answer to it.\", options)))\n    + \"\\n    </span>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likerNavigateLock/creator/widget/states/Question',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Question',\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\n    'taoQtiItem/qtiCreator/editor/simpleContentEditableElement',\n    'taoQtiItem/qtiCreator/editor/containerEditor',\n    'tpl!likerNavigateLock/creator/tpl/propertiesForm',\n    'lodash',\n    'jquery'\n], function(stateFactory, Question, formElement, simpleEditor, containerEditor, formTpl, _, $){\n    'use strict';\n\n    var LikertInteractionStateQuestion = stateFactory.extend(Question, function(){\n\n        var $container = this.widget.$container,\n            $prompt = $container.find('.prompt'),\n            interaction = this.widget.element;\n\n        containerEditor.create($prompt, {\n            change : function(text){\n                interaction.data('prompt', text);\n                interaction.updateMarkup();\n            },\n            markup : interaction.markup,\n            markupSelector : '.prompt',\n            related : interaction,\n            areaBroker: this.widget.getAreaBroker()\n        });\n\n        simpleEditor.create($container, '.likert-label-min', function(text){\n            interaction.prop('label-min', text);\n        });\n\n        simpleEditor.create($container, '.likert-label-max', function(text){\n            interaction.prop('label-max', text);\n        });\n\n    }, function(){\n\n        var $container = this.widget.$container,\n            $prompt = $container.find('.prompt');\n\n        simpleEditor.destroy($container);\n        containerEditor.destroy($prompt);\n    });\n\n    LikertInteractionStateQuestion.prototype.initForm = function(){\n\n        var _widget = this.widget,\n            $form = _widget.$form,\n            interaction = _widget.element,\n            response = interaction.getResponseDeclaration(),\n            level = parseInt(interaction.prop('level')) || 5,\n            levels = [5, 7, 9],\n            levelData = {};\n\n        //build select option data for the template\n        _.each(levels, function(lvl){\n            levelData[lvl] = {\n                label : lvl,\n                selected : (lvl === level)\n            };\n        });\n\n        //render the form using the form template\n        $form.html(formTpl({\n            serial : response.serial,\n            levels : levelData,\n            navigationLock: interaction.prop('navigationLock') || false\n        }));\n\n        //init form javascript\n        formElement.initWidget($form);\n\n        //init data change callbacks\n        formElement.setChangeCallbacks($form, interaction, {\n            level : function(interaction, value){\n\n                //update the pci property value:\n                interaction.prop('level', value);\n\n                //trigger change event:\n                interaction.triggerPci('levelchange', [parseInt(value)]);\n            },\n            navigationLock : function(interaction, value){\n\n                //update the pci property value:\n                interaction.prop('navigationLock', value);\n            }\n        });\n\n    };\n\n    return LikertInteractionStateQuestion;\n});\n\n","define('likerNavigateLock/creator/widget/states/Answer',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Answer',\n    'taoQtiItem/qtiCreator/widgets/interactions/helpers/answerState',\n    'taoQtiItem/qtiCreator/widgets/helpers/content'\n], function(stateFactory, Answer, answerStateHelper){\n    'use strict';\n\n    var InteractionStateAnswer = stateFactory.extend(Answer, function initAnswerState(){\n        this.widget.$original.find('.likert input').prop('disabled', true);\n    }, function exitAnswerState(){\n        this.widget.$original.find('.likert input').prop('disabled', false);\n    });\n\n    InteractionStateAnswer.prototype.initResponseForm = function initResponseForm(){\n\n        answerStateHelper.initResponseForm(this.widget, {rpTemplates : ['CUSTOM', 'NONE']});\n    };\n\n    return InteractionStateAnswer;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likerNavigateLock/creator/widget/states/states',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states',\n    'likerNavigateLock/creator/widget/states/Question',\n    'likerNavigateLock/creator/widget/states/Answer'\n], function(factory, states){\n    'use strict';\n    return factory.createBundle(states, arguments, ['correct', 'map']);\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likerNavigateLock/creator/widget/Widget',[\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget',\n    'likerNavigateLock/creator/widget/states/states'\n], function(Widget, states){\n    'use strict';\n\n    var likerNavigateLockWidget = Widget.clone();\n\n    likerNavigateLockWidget.initCreator = function(){\n\n        this.registerStates(states);\n\n        Widget.initCreator.call(this);\n\n        //for existing likert scale PCI, ensure that the rp template is always NONE\n        this.element.getResponseDeclaration().setTemplate('NONE');\n    };\n    \n    return likerNavigateLockWidget;\n});\n","\ndefine('tpl!likerNavigateLock/creator/tpl/markup', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"likerNavigateLock\\\">\\n    <div class=\\\"prompt\\\">\";\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n    <div class=\\\"scale\\\">\\n        <ul class=\\\"likert\\\"></ul>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likerNavigateLock/pciCreator',[\n    'lodash',\n    'likerNavigateLock/creator/widget/Widget',\n    'tpl!likerNavigateLock/creator/tpl/markup'\n], function(_, Widget, markupTpl){\n    'use strict';\n\n    var _typeIdentifier = 'likerNavigateLock';\n\n    var likerNavigateLockCreator = {\n        /**\n         * (required) Get the typeIdentifier of the custom interaction\n         *\n         * @returns {String}\n         */\n        getTypeIdentifier : function(){\n            return _typeIdentifier;\n        },\n        /**\n         * (required) Get the widget prototype\n         * Used in the renderer\n         *\n         * @returns {Object} Widget\n         */\n        getWidget : function(){\n            return Widget;\n        },\n        /**\n         * (optional) Get the default properties values of the pci.\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        getDefaultProperties : function(pci){\n            return {\n                level : 5,\n                'label-min' : 'min',\n                'label-max' : 'max',\n                'navigationLock': false\n            };\n        },\n        /**\n         * (optional) Callback to execute on the\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        afterCreate : function(pci){\n            //always set the NONE response processing mode to likert scale\n            pci.getResponseDeclaration().setTemplate('NONE');\n        },\n        /**\n         * (required) Gives the qti pci xml template\n         *\n         * @returns {function} handlebar template\n         */\n        getMarkupTemplate : function(){\n            return markupTpl;\n        },\n        /**\n         * (optional) Allows passing additional data to xml template\n         *\n         * @returns {function} handlebar template\n         */\n        getMarkupData : function(pci, defaultData){\n            defaultData.prompt = pci.data('prompt');\n            return defaultData;\n        }\n    };\n\n    //since we assume we are in a tao context, there is no use to expose the a global object for lib registration\n    //all libs should be declared here\n    return likerNavigateLockCreator;\n});\n"]}