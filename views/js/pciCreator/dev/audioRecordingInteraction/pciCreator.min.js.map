{"version":3,"sources":["../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/tpl/propertiesForm!tpl","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/widget/states/Question.js","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/widget/states/states.js","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/css/audioRecordingInteraction!css","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/widget/Widget.js","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/tpl/markup!tpl","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/pciCreator.js","../../../../../../../../../onLayerEnd0.js"],"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","program1","program3","program5","program7","this","compilerInfo","merge","stack1","helper","options","buffer","helperMissing","escapeExpression","self","__","hash","call","identifier","serial","allowPlayback","inverse","noop","fn","program","autoStart","unless","delayMinutes","delaySeconds","autoPlayback","maxRecords","maxRecordingTime","isCompressed","audioBitrate","isStereo","useMediaStimulus","displayDownloadLink","_","$","stateFactory","Question","formElement","pciMediaManagerFactory","simpleEditor","containerEditor","formTpl","typeCaster","configChangeCallBack","interaction","value","name","prop","triggerPci","getProperties","AudioRecordingInteractionStateQuestion","extend","$container","widget","$prompt","find","element","create","change","text","updateMarkup","markup","markupSelector","related","areaBroker","getAreaBroker","destroy","prototype","initForm","$mediaStimulusForm","$compressedOptions","$uncompressedOptions","$delayOptions","_widget","$form","response","getResponseDeclaration","pciMediaManager","html","attr","strToBool","append","getForm","initWidget","setChangeCallbacks","assign","i","id","boundInteraction","show","hide","removeClass","getChangeCallbacks","init","factory","states","createBundle","arguments","Widget","AudioRecordingInteractionWidget","clone","initCreator","$interaction","registerStates","length","addClass","prompt","ciRegistry","markupTpl","getTypeIdentifier","getWidget","getDefaultProperties","media","autostart","replayTimeout","maxPlays","updateResponsePartially","afterCreate","getMarkupTemplate","getMarkupData","pci","defaultData","c","d","document","a","s","createElement","type","getElementsByTagName","cssText","createTextNode","PCI"],"mappings":"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","file":"pciCreator.min.js","sourcesContent":["\ndefine('tpl!audioRecordingInteraction/creator/tpl/propertiesForm', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \"checked=\\\"checked\\\"\";\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  return \"style=\\\"display:none\\\"\";\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \" selected=\\\"selected\\\"\";\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  return \" hidden\";\n  }\n\n  buffer += \"<div class=\\\"panel\\\">\\n    <label for=\\\"\\\" class=\\\"has-icon\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Response identifier\", options) : helperMissing.call(depth0, \"__\", \"Response identifier\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <div class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options)))\n    + \"</div>\\n\\n    <input type=\\\"text\\\"\\n           name=\\\"identifier\\\"\\n           value=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\\n           placeholder=\\\"e.g. RESPONSE\\\"\\n           data-validate=\\\"$notEmpty; $qtiIdentifier; $availableIdentifier(serial=\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\">\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"allowPlayback\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowPlayback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow playback\", options) : helperMissing.call(depth0, \"__\", \"Allow playback\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Give the possibility to the test taker to playback its own recording.\", options) : helperMissing.call(depth0, \"__\", \"Give the possibility to the test taker to playback its own recording.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"autoStart\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.autoStart), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Auto start recording\", options) : helperMissing.call(depth0, \"__\", \"Auto start recording\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recording starts automatically once test taker give microphone use authorisation. If a media stimulus is used, then the recording starts automatically after the stimulus has been played.\", options) : helperMissing.call(depth0, \"__\", \"Recording starts automatically once test taker give microphone use authorisation. If a media stimulus is used, then the recording starts automatically after the stimulus has been played.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div data-role=\\\"delayOptions\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.autoStart), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <div class=\\\"panel\\\">\\n        <label for=\\\"delayMinutes\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Min:\", options) : helperMissing.call(depth0, \"__\", \"Min:\", options)))\n    + \"</label>\\n        <input name=\\\"delayMinutes\\\" value=\\\"\";\n  if (helper = helpers.delayMinutes) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.delayMinutes); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" data-max=\\\"20\\\" type=\\\"text\\\" />\\n        <label for=\\\"delaySeconds\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Sec:\", options) : helperMissing.call(depth0, \"__\", \"Sec:\", options)))\n    + \"</label>\\n        <input name=\\\"delaySeconds\\\" value=\\\"\";\n  if (helper = helpers.delaySeconds) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.delaySeconds); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-increment=\\\"15\\\" data-min=\\\"0\\\" data-max=\\\"45\\\" type=\\\"text\\\" />\\n    </div>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"autoPlayback\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.autoPlayback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Auto playback recording\", options) : helperMissing.call(depth0, \"__\", \"Auto playback recording\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.\", options) : helperMissing.call(depth0, \"__\", \"Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label for=\\\"maxRecords\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max attempts:\", options) : helperMissing.call(depth0, \"__\", \"Max attempts:\", options)))\n    + \"</label>\\n    <input name=\\\"maxRecords\\\" value=\\\"\";\n  if (helper = helpers.maxRecords) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxRecords); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" type=\\\"text\\\" />\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.\", options) : helperMissing.call(depth0, \"__\", \"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label for=\\\"maxRecordingTime\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time limit:\", options) : helperMissing.call(depth0, \"__\", \"Time limit:\", options)))\n    + \"</label>\\n    <input name=\\\"maxRecordingTime\\\" value=\\\"\";\n  if (helper = helpers.maxRecordingTime) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxRecordingTime); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"10\\\" data-min=\\\"10\\\" type=\\\"text\\\" />\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In seconds. Maximum recording time allowed (cannot be less than 10seconds). Recording will automatically stop once reached.\", options) : helperMissing.call(depth0, \"__\", \"In seconds. Maximum recording time allowed (cannot be less than 10seconds). Recording will automatically stop once reached.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<hr />\\n<div class=\\\"panel\\\">\\n    <label for=\\\"isCompressed\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recording format\", options) : helperMissing.call(depth0, \"__\", \"Recording format\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).\", options) : helperMissing.call(depth0, \"__\", \"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).\", options)))\n    + \"\\n    </span>\\n    <select name=\\\"isCompressed\\\">\\n        <option value=\\\"true\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Compressed\", options) : helperMissing.call(depth0, \"__\", \"Compressed\", options)))\n    + \"</option>\\n        <option value=\\\"false\\\"\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Uncompressed\", options) : helperMissing.call(depth0, \"__\", \"Uncompressed\", options)))\n    + \"</option>\\n    </select>\\n</div>\\n\\n<div data-role=\\\"compressedOptions\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <div class=\\\"panel\\\">\\n        <label for=\\\"audioBitrate\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Audio bitrate:\", options) : helperMissing.call(depth0, \"__\", \"Audio bitrate:\", options)))\n    + \"</label>\\n        <input name=\\\"audioBitrate\\\" value=\\\"\";\n  if (helper = helpers.audioBitrate) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.audioBitrate); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1000\\\" data-min=\\\"8000\\\" type=\\\"text\\\" />\\n        <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n        <span class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.\", options) : helperMissing.call(depth0, \"__\", \"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.\", options)))\n    + \"\\n        </span>\\n    </div>\\n</div>\\n\\n<div data-role=\\\"uncompressedOptions\\\"  \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <div class=\\\"panel\\\">\\n        <label for=\\\"isStereo\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Channels\", options) : helperMissing.call(depth0, \"__\", \"Channels\", options)))\n    + \"</label>\\n        <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n        <span class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Number of channels for the recording. Allow to cut the record size in half if used in mono.\", options) : helperMissing.call(depth0, \"__\", \"Number of channels for the recording. Allow to cut the record size in half if used in mono.\", options)))\n    + \"\\n        </span>\\n        <select name=\\\"isStereo\\\">\\n            <option value=\\\"false\\\"\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isStereo), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Mono\", options) : helperMissing.call(depth0, \"__\", \"Mono\", options)))\n    + \"</option>\\n            <option value=\\\"true\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isStereo), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Stereo\", options) : helperMissing.call(depth0, \"__\", \"Stereo\", options)))\n    + \"</option>\\n        </select>\\n    </div>\\n</div>\\n\\n<hr />\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"useMediaStimulus\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.useMediaStimulus), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Use media stimulus\", options) : helperMissing.call(depth0, \"__\", \"Use media stimulus\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This options allow to insert a media stimulus that will have to be played before recording can happen.\", options) : helperMissing.call(depth0, \"__\", \"This options allow to insert a media stimulus that will have to be played before recording can happen.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <div class=\\\"media-stimulus-properties-form\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.useMediaStimulus), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"></div>\\n</div>\\n\\n<hr />\\n\\n<h3 class=\\\"txt-error\\\"><strong><span class=\\\"icon-warning\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"For tests only\", options) : helperMissing.call(depth0, \"__\", \"For tests only\", options)))\n    + \"</strong></h3>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"displayDownloadLink\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.displayDownloadLink), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span>\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow download\", options) : helperMissing.call(depth0, \"__\", \"Allow download\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.\", options) : helperMissing.call(depth0, \"__\", \"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.\", options)))\n    + \"\\n    </span>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/creator/widget/states/Question',[\n    'lodash',\n    'i18n',\n    'jquery',\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Question',\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\n    'taoQtiItem/qtiCreator/widgets/helpers/pciMediaManager/pciMediaManager',\n    'taoQtiItem/qtiCreator/editor/simpleContentEditableElement',\n    'taoQtiItem/qtiCreator/editor/containerEditor',\n    'tpl!audioRecordingInteraction/creator/tpl/propertiesForm',\n    'util/typeCaster'\n], function( _, __, $, stateFactory, Question, formElement, pciMediaManagerFactory, simpleEditor, containerEditor, formTpl, typeCaster){\n    'use strict';\n\n    var AudioRecordingInteractionStateQuestion = stateFactory.extend(Question, function create(){\n        var $container = this.widget.$container,\n            $prompt = $container.find('.prompt'),\n            interaction = this.widget.element;\n\n        containerEditor.create($prompt, {\n            change : function change(text){\n                interaction.data('prompt', text);\n                interaction.updateMarkup();\n            },\n            markup : interaction.markup,\n            markupSelector : '.prompt',\n            related : interaction,\n            areaBroker: this.widget.getAreaBroker()\n        });\n\n    }, function destroy(){\n        var $container = this.widget.$container,\n            $prompt = $container.find('.prompt');\n\n        simpleEditor.destroy($container);\n        containerEditor.destroy($prompt);\n    });\n\n    /**\n     * Change callback of form values\n     * @param {Object} interaction\n     * @param {*} value\n     * @param {String} name\n     */\n    function configChangeCallBack(interaction, value, name) {\n        interaction.prop(name, value);\n        interaction.triggerPci('configChange', [interaction.getProperties()]);\n    }\n\n    AudioRecordingInteractionStateQuestion.prototype.initForm = function initForm(){\n        var _widget = this.widget,\n            $form = _widget.$form,\n            interaction = _widget.element,\n            response = interaction.getResponseDeclaration(),\n            $mediaStimulusForm,\n            $compressedOptions,\n            $uncompressedOptions,\n            $delayOptions;\n\n        var pciMediaManager = pciMediaManagerFactory(_widget);\n\n        //render the form using the form template\n        $form.html(formTpl({\n            serial : response.serial,\n            identifier : interaction.attr('responseIdentifier'),\n\n            allowPlayback:          typeCaster.strToBool(interaction.prop('allowPlayback'), true),\n            autoStart:              typeCaster.strToBool(interaction.prop('autoStart'), false),\n            autoPlayback:           typeCaster.strToBool(interaction.prop('autoPlayback'), false),\n\n            delayMinutes:           interaction.prop('delayMinutes'),\n            delaySeconds:           interaction.prop('delaySeconds'),\n\n            maxRecords:             interaction.prop('maxRecords'),\n            maxRecordingTime:       interaction.prop('maxRecordingTime'),\n\n            isCompressed:           typeCaster.strToBool(interaction.prop('isCompressed'), true),\n            audioBitrate:           interaction.prop('audioBitrate'),\n            isStereo:               typeCaster.strToBool(interaction.prop('isStereo'), false),\n\n            useMediaStimulus:       typeCaster.strToBool(interaction.prop('useMediaStimulus'), false),\n\n            displayDownloadLink:    typeCaster.strToBool(interaction.prop('displayDownloadLink'), false)\n        }));\n\n        $mediaStimulusForm = $form.find('.media-stimulus-properties-form');\n        $mediaStimulusForm.append(pciMediaManager.getForm());\n\n        $compressedOptions = $form.find('[data-role=\"compressedOptions\"]');\n        $uncompressedOptions = $form.find('[data-role=\"uncompressedOptions\"]');\n\n        $delayOptions = $form.find('[data-role=\"delayOptions\"]');\n\n        //init form javascript\n        formElement.initWidget($form);\n\n        //init data change callbacks\n        formElement.setChangeCallbacks($form, interaction, _.assign({\n            identifier : function identifier(i, value){\n                response.id(value);\n                interaction.attr('responseIdentifier', value);\n            },\n\n            allowPlayback:      configChangeCallBack,\n\n            autoStart: function autoStart(boundInteraction, value, name) {\n                if (value) {\n                    $delayOptions.show();\n                } else {\n                    $delayOptions.hide();\n                }\n                configChangeCallBack(boundInteraction, value, name);\n            },\n\t\t\tautoPlayback:       configChangeCallBack,\n\n            delayMinutes:       configChangeCallBack,\n            delaySeconds:       configChangeCallBack,\n\n            maxRecords:         configChangeCallBack,\n            maxRecordingTime:   configChangeCallBack,\n\n            isCompressed: function isCompressed(boundInteraction, value, name) {\n                if (value === 'true') {\n                    $uncompressedOptions.hide();\n                    $compressedOptions.show();\n                } else {\n                    $uncompressedOptions.show();\n                    $compressedOptions.hide();\n                }\n                configChangeCallBack(boundInteraction, value, name);\n            },\n            audioBitrate:       configChangeCallBack,\n            isStereo:           configChangeCallBack,\n\n            useMediaStimulus: function useMediaStimulusCb(boundInteraction, value, name) {\n                if (value) {\n                    $mediaStimulusForm.removeClass('hidden');\n                    $mediaStimulusForm.show(250);\n                } else {\n                    $mediaStimulusForm.hide(250);\n                }\n                configChangeCallBack(boundInteraction, value, name);\n            },\n\n            displayDownloadLink: configChangeCallBack\n\n        }, pciMediaManager.getChangeCallbacks()));\n\n        pciMediaManager.init();\n    };\n\n    return AudioRecordingInteractionStateQuestion;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/creator/widget/states/states',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states',\n    'audioRecordingInteraction/creator/widget/states/Question'\n], function(factory, states){\n    'use strict';\n\n    return factory.createBundle(states, arguments, ['answer', 'correct', 'map']);\n});\n","\ndefine('css!audioRecordingInteraction/creator/css/audioRecordingInteraction',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/creator/widget/Widget',[\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget',\n    'audioRecordingInteraction/creator/widget/states/states',\n    'css!audioRecordingInteraction/creator/css/audioRecordingInteraction'\n], function(Widget, states){\n    'use strict';\n\n    var AudioRecordingInteractionWidget = Widget.clone();\n\n    AudioRecordingInteractionWidget.initCreator = function(){\n        var $interaction;\n\n        this.registerStates(states);\n\n        Widget.initCreator.call(this);\n\n        $interaction = this.$container.find('.audioRecordingInteraction');\n        if ($interaction.length) {\n            $interaction.addClass('tao-qti-creator-context');\n        }\n    };\n\n    return AudioRecordingInteractionWidget;\n});\n","\ndefine('tpl!audioRecordingInteraction/creator/tpl/markup', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"audioRecordingInteraction\\\">\\n    <div class=\\\"prompt\\\">\";\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </div>\\n    <div class=\\\"audio-rec\\\">\\n        <div class=\\\"media-stimulus\\\"> </div>\\n        <div class=\\\"input-meter\\\">\\n            <div class=\\\"countdown-pie-chart\\\"> </div>\\n            <div class=\\\"leds\\\"> </div>\\n            <div class=\\\"mic\\\"> </div>\\n        </div>\\n        <div class=\\\"progress\\\"> </div>\\n        <div class=\\\"controls\\\"> </div>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/pciCreator',[\n    'lodash',\n    'taoQtiItem/qtiCreator/editor/customInteractionRegistry',\n    'audioRecordingInteraction/creator/widget/Widget',\n    'tpl!audioRecordingInteraction/creator/tpl/markup'\n], function(_, ciRegistry, Widget, markupTpl){\n    'use strict';\n\n    var _typeIdentifier = 'audioRecordingInteraction';\n\n    var audioRecordingInteractionCreator = {\n        /**\n         * (required) Get the typeIdentifier of the custom interaction\n         *\n         * @returns {String}\n         */\n        getTypeIdentifier : function getTypeIdentifier(){\n            return _typeIdentifier;\n        },\n        /**\n         * (required) Get the widget prototype\n         * Used in the renderer\n         *\n         * @returns {Object} Widget\n         */\n        getWidget : function getWidget(){\n            return Widget;\n        },\n        /**\n         * (optional) Get the default properties values of the pci.\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        getDefaultProperties : function getDefaultProperties(){\n            return {\n                allowPlayback:           true,\n                autoStart:               false,\n                autoPlayback:            false,\n\n                delayMinutes:            0,\n                delaySeconds:            0,\n\n                maxRecords:              2,\n                maxRecordingTime:        120,\n\n                isCompressed:            true,\n                audioBitrate:            20000,\n                isStereo:                false,\n\n                useMediaStimulus:        false,\n                media: {\n                    autostart:           true,\n                    replayTimeout:       5,\n                    maxPlays:            2\n                },\n\n                displayDownloadLink:     false,\n                updateResponsePartially: false,\n            };\n        },\n        /**\n         * (optional) Callback to execute on the\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        afterCreate : function afterCreate(){\n            //do some stuff\n        },\n        /**\n         * (required) Gives the qti pci xml template\n         *\n         * @returns {function} handlebar template\n         */\n        getMarkupTemplate : function getMarkupTemplate(){\n            return markupTpl;\n        },\n        /**\n         * (optional) Allows passing additional data to xml template\n         *\n         * @returns {function} handlebar template\n         */\n        getMarkupData : function getMarkupData(pci, defaultData){\n            defaultData.prompt = pci.data('prompt');\n            return defaultData;\n        }\n    };\n\n    //since we assume we are in a tao context, there is no use to expose the a global object for lib registration\n    //all libs should be declared here\n    return audioRecordingInteractionCreator;\n});\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel{margin-top:-15px}.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel label[for=\\\"delayMinutes\\\"]{min-width:0}.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel label[for=\\\"delaySeconds\\\"]{min-width:0;padding-left:18px}\\n\\n/*# sourceMappingURL=audioRecordingInteraction.css.map */');\n"]}