{"version":3,"sources":["../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/tpl/propertiesForm!tpl","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/widget/states/Question.js","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/widget/states/states.js","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/css/audioRecordingInteraction!css","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/widget/Widget.js","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/tpl/markup!tpl","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/pciCreator.js","../../../../../../../onLayerEnd0.js"],"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","program1","program3","program5","program7","this","compilerInfo","merge","stack1","helper","options","buffer","helperMissing","escapeExpression","self","__","hash","call","identifier","serial","allowPlayback","inverse","noop","fn","program","autoStart","unless","delayMinutes","delaySeconds","autoPlayback","maxRecords","maxRecordingTime","maximumRecordingTimeLimit","isCompressed","audioBitrate","isStereo","useMediaStimulus","displayDownloadLink","partialUpdateInterval","_","$","module","stateFactory","Question","formElement","pciMediaManagerFactory","simpleEditor","containerEditor","formTpl","typeCaster","configChangeCallBack","interaction","value","name","prop","triggerPci","getProperties","AudioRecordingInteractionStateQuestion","extend","$container","widget","$prompt","find","element","create","change","text","updateMarkup","markup","markupSelector","related","areaBroker","getAreaBroker","destroy","prototype","initForm","$mediaStimulusForm","$compressedOptions","$uncompressedOptions","$delayOptions","_widget","$form","response","getResponseDeclaration","pciMediaManager","html","defaults","config","attr","strToBool","updateResponsePartially","parseInt","append","getForm","initWidget","setChangeCallbacks","assign","i","id","boundInteraction","show","hide","removeClass","parseFloat","getChangeCallbacks","init","factory","states","createBundle","arguments","Widget","AudioRecordingInteractionWidget","clone","initCreator","$interaction","registerStates","length","addClass","prompt","ciRegistry","markupTpl","audioRecordingInteractionCreator","getTypeIdentifier","getWidget","defaultProperties","beforeStateInit","event","pci","typeIdentifier","getDefaultProperties","forEach","properties","isReviewMode","media","autostart","replayTimeout","maxPlays","afterCreate","getMarkupTemplate","getMarkupData","defaultData","c","d","document","a","s","createElement","type","getElementsByTagName","cssText","createTextNode","PCI"],"mappings":"AACAA,OAAA,4DAAA,cAAA,SAAAC,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAC,MAKA,QAAAC,UAAAJ,OAAAG,MAGA,MAAA,oBAGA,QAAAE,UAAAL,OAAAG,MAGA,MAAA,uBAGA,QAAAG,UAAAN,OAAAG,MAGA,MAAA,uBAGA,QAAAI,UAAAP,OAAAG,MAGA,MAAA,UAzBAK,KAAAC,cAAA,EAAA,YACAR,QAAAO,KAAAE,MAAAT,QAAAF,WAAAE,SAAAE,KAAAA,QACA,IAAAQ,QAAAC,OAAAC,QAAAC,OAAA,GAAAC,cAAAd,QAAAc,cAAAC,iBAAAR,KAAAQ,iBAAAC,KAAAT,IAoKA,OA1IAM,SAAA,gFACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;uJAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,sBAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,sBAAAa,WACA,uKACAG,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,kUAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,kUAAAa,WACA;s1BACAD,OAAAX,QAAAoB,YAAAV,OAAAC,OAAAQ,KAAApB;uDAAAmB,QAAAhB,KAAAA,QACAS,OAAAZ,QAAAA,OAAAqB,WAAAV,OAhCA,kBAgCAC,QAAAA,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,OAAAS,QACAE,QAAAE,iBAAAL,QACA,oIACAC,OAAAX,QAAAqB,QAAAX,OAAAC,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,QACAS,OAAAZ,QAAAA,OAAAsB,OAAAX,OApCA,kBAoCAC,QAAAA,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,OAAAS,QACAE,QAAAE,iBAAAL,QACA;oJACAA,OAAAV,QAAA,GAAAmB,KAAApB,OAAAA,QAAAA,OAAAuB,eAAAJ,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAAvB,SAAAD,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,qDACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,iBAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,iBAAAa,WACA,sLACAG,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;4VAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,wEAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,wEAAAa,WACA;uVACAF,OAAAV,QAAA,GAAAmB,KAAApB,OAAAA,QAAAA,OAAA4B,WAAAT,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAAvB,SAAAD,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,qDACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,uBAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,uBAAAa,WACA,sLACAG,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;wWAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,6LAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,6LAAAa,WACA;ygBACAF,OAAAV,QAAA4B,OAAAT,KAAApB,OAAAA,QAAAA,OAAA4B,WAAAT,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAAtB,SAAAF,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH;uCACAG,QAAA,sFACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,OAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,OAAAa,WACA,6EACAD,OAAAX,QAAA6B,cAAAnB,OAAAC,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,QACAS,OAAAZ,QAAAA,OAAA8B,aAAAnB,OA3DA,kBA2DAC,QAAAA,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,OAAAS,QACAE,QAAAE,iBAAAL,QACA,wHACAK,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;gNAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,OAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,OAAAa,WACA,6EACAD,OAAAX,QAAA8B,cAAApB,OAAAC,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,QACAS,OAAAZ,QAAAA,OAAA+B,aAAApB,OAjEA,kBAiEAC,QAAAA,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,OAAAS,QACAE,QAAAE,iBAAAL,QACA;4NACAA,OAAAV,QAAA,GAAAmB,KAAApB,OAAAA,QAAAA,OAAAgC,cAAAb,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAAvB,SAAAD,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,qDACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,0BAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,0BAAAa,WACA,sLACAG,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;8WAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,oJAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,oJAAAa,WACA,wGACAG,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;ohBAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,gBAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,gBAAAa,WACA;kLACAD,OAAAX,QAAAgC,YAAAtB,OAAAC,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,QACAS,OAAAZ,QAAAA,OAAAiC,WAAAtB,OA9EA,kBA8EAC,QAAAA,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,OAAAS,QACAE,QAAAE,iBAAAL,QACA,oOACAK,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;4TAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,6LAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,6LAAAa,WACA,+GACAG,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;6mBAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,cAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,cAAAa,WACA;2LACAD,OAAAX,QAAAiC,kBAAAvB,OAAAC,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,QACAS,OAAAZ,QAAAA,OAAAkC,iBAAAvB,OAtFA,kBAsFAC,QAAAA,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,OAAAS,QACAE,QAAAE,iBAAAL,QACA,gEACAC,OAAAX,QAAAkC,2BAAAxB,OAAAC,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,QACAS,OAAAZ,QAAAA,OAAAmC,0BAAAxB,OA1FA,kBA0FAC,QAAAA,OAAAQ,KAAApB;qDAAAmB,QAAAhB,KAAAA,OAAAS,QACAE,QAAAE,iBAAAL,QACA,sLACAK,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,8HAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,8HAAAa,WACA,oGACAG,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;oeAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,mBAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,mBAAAa,WACA,8KACAG,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;wVAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,oJAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,oJAAAa,WACA;8dACAF,OAAAV,QAAA,GAAAmB,KAAApB,OAAAA,QAAAA,OAAAoC,cAAAjB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAH,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,IACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;mEAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,aAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,aAAAa,WACA,6CACAF,OAAAV,QAAA4B,OAAAT,KAAApB,OAAAA,QAAAA,OAAAoC,cAAAjB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAH,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,IACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,eAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,eAAAa,WACA;6LACAF,OAAAV,QAAA4B,OAAAT,KAAApB,OAAAA,QAAAA,OAAAoC,cAAAjB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAAtB,SAAAF,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,sFACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,iBAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,iBAAAa,WACA;4LACAD,OAAAX,QAAAoC,cAAA1B,OAAAC,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,QACAS,OAAAZ,QAAAA,OAAAqC,aAAA1B,OAnHA,kBAmHAC,QAAAA,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,OAAAS,QACAE,QAAAE,iBAAAL,QACA,sPACAK,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;8UAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,iKAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,iKAAAa,WACA;2eACAF,OAAAV,QAAA,GAAAmB,KAAApB,OAAAA,QAAAA,OAAAoC,cAAAjB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAAtB,SAAAF,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,kEACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;iIAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,WAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,WAAAa,WACA,0LACAG,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,8FAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,8FAAAa,WACA;uXACAF,OAAAV,QAAA4B,OAAAT,KAAApB,OAAAA,QAAAA,OAAAsC,UAAAnB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAH,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,IACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,OAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,OAAAa,WACA;2IACAF,OAAAV,QAAA,GAAAmB,KAAApB,OAAAA,QAAAA,OAAAsC,UAAAnB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAH,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,IACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,SAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,SAAAa,WACA,4KACAF,OAAAV,QAAA,GAAAmB,KAAApB,OAAAA,QAAAA,OAAAuC;+DAAApB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAAvB,SAAAD,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,qDACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,qBAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,qBAAAa,WACA,sLACAG,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;oWAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,yGAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,yGAAAa,WACA;wYACAF,OAAAV,QAAA4B,OAAAT,KAAApB,OAAAA,QAAAA,OAAAuC,kBAAApB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAApB,SAAAJ,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,4GACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;2KAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,iBAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,iBAAAa,WACA,yHACAF,OAAAV,QAAA,GAAAmB,KAAApB,OAAAA,QAAAA,OAAAwC,qBAAArB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAAvB,SAAAD,MAAAA,KAAAA,QACAQ,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;+HAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,iBAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,iBAAAa,WACA,sLACAG,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB,GAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,2NAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,2NAAAa,WACA,oHACAG,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;8qBAAAL;SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,mBAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,mBAAAa,WACA,4FACAD,OAAAX,QAAAwC,uBAAA9B,OAAAC,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,QACAS,OAAAZ,QAAAA,OAAAyC,sBAAA9B,OA/JA,kBA+JAC,QAAAA,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,OAAAS,QACAE,QAAAE,iBAAAL,QACA,kPACAK,kBAAAJ,OAAAX,QAAAiB,IAAAlB,QAAAA,OAAAkB;0UAAAL,SAAAM,QAAAhB,KAAAA,MAAAS,OAAAA,OAAAQ,KAAApB,OAAA,0EAAAa,SAAAE,cAAAK,KAAApB,OAAA,KAAA,0EAAAa,WACA,gCCvJAjB,OAAA,4DACA,SACA,OACA,SACA,SACA,+CACA,6DACA,oDACA,wEACA,4DACA,+CACA,2DACA,mBACA,SAAA8C,EAAAxB,GAAAyB,EAAAC,OAAAC,aAAAC,SAAAC,YAAAC,uBAAAC,aAAAC,gBAAAC,QAAAC;uoBACA,YAgCA,SAAAC,sBAAAC,YAAAC,MAAAC;uDACAF,YAAAG,KAAAD,KAAAD,OACAD,YAAAI,WAAA,gBAAAJ,YAAAK,kBAhCA,GAAAC,wCAAAf,aAAAgB,OAAAf,SAAA,WACA,GAAAgB,YAAAtD,KAAAuD,OAAAD,WACAE,QAAAF,WAAAG,KAAA,WACAX,YAAA9C,KAAAuD,OAAAG,OAEAhB,iBAAAiB,OAAAH,SACAI,OAAA,SAAAC,MACAf,YAAAnD,KAAA,SAAAkE,MACAf,YAAAgB,gBAEAC,OAAAjB,YAAAiB,OACAC,eAAA,UACAC,QAAAnB,YACAoB,WAAAlE,KAAAuD,OAAAY,mBAGA,WACA,GAAAb,YAAAtD,KAAAuD,OAAAD,WACAE,QAAAF,WAAAG,KAAA,UAEAhB,cAAA2B,QAAAd;kCACAZ,gBAAA0B,QAAAZ,UA4HA,OA9GAJ,wCAAAiB,UAAAC,SAAA,WACA,GAIAC,oBACAC,mBACAC,qBACAC,cAPAC,QAAA3E,KAAAuD,OACAqB,MAAAD,QAAAC,MACA9B,YAAA6B,QAAAjB,QACAmB,SAAA/B,YAAAgC,yBAMAC,gBAAAvC,uBAAAmC,QAGAC,OAAAI,KAAArC,QAAAT,EAAA+C,YAAA7C,OAAA8C,UACApE,OAAA+D,SAAA/D,OACAD,WAAAiC,YAAAqC,KAAA,sBAEApE,cAAA6B,WAAAwC,UAAAtC,YAAAG,KAAA,kBAAA,GACA7B,UAAAwB,WAAAwC,UAAAtC,YAAAG,KAAA,cAAA,GACAzB,aAAAoB,WAAAwC,UAAAtC,YAAAG,KAAA,iBAAA;uEAEA3B,aAAAwB,YAAAG,KAAA,gBACA1B,aAAAuB,YAAAG,KAAA,gBAEAxB,WAAAqB,YAAAG,KAAA,cACAvB,iBAAAoB,YAAAG,KAAA,oBAEArB,aAAAgB,WAAAwC,UAAAtC,YAAAG,KAAA,iBAAA,GACApB,aAAAiB,YAAAG,KAAA,gBACAnB,SAAAc,WAAAwC,UAAAtC,YAAAG,KAAA,aAAA,GAEAlB,iBAAAa,WAAAwC,UAAAtC,YAAAG,KAAA,qBAAA,GAEAoC,wBAAAzC,WAAAwC,UAAAtC,YAAAG,KAAA,4BAAA,GACAhB,sBAAAqD,SAAAxC,YAAAG,KAAA,yBAAA,IAAA;iFAEAjB,oBAAAY,WAAAwC,UAAAtC,YAAAG,KAAA,wBAAA,OAGAsB,mBAAAK,MAAAnB,KAAA,mCACAc,mBAAAgB,OAAAR,gBAAAS,WAEAhB,mBAAAI,MAAAnB,KAAA,mCACAgB,qBAAAG,MAAAnB,KAAA,qCAEAiB,cAAAE,MAAAnB,KAAA,8BAGAlB,YAAAkD,WAAAb,OAGArC,YAAAmD,mBAAAd,MAAA9B,YAAAZ,EAAAyD,QACA9E,WAAA,SAAA+E,EAAA7C,OACA8B,SAAAgB,GAAA9C,OACAD,YAAAqC,KAAA,qBAAApC,QAGAhC,cAAA8B;mCAEAzB,UAAA,SAAA0E,iBAAA/C,MAAAC,MACAD,MACA2B,cAAAqB,OAEArB,cAAAsB,OAEAnD,qBAAAiD,iBAAA/C,MAAAC,OAEAxB,aAAAqB,qBAEAvB,aAAAuB,qBACAtB,aAAAsB,qBAEApB,WAAAoB,qBACAnB,iBAAAmB,qBAEAjB,aAAA,SAAAkE,iBAAA/C,MAAAC,MACA,SAAAD,OACA0B,qBAAAuB,OACAxB,mBAAAuB,SAEAtB,qBAAAsB,OACAvB,mBAAAwB,QAEAnD,qBAAAiD,iBAAA/C,MAAAC,OAEAnB,aAAAgB,qBACAf,SAAAe,qBAEAd,iBAAA,SAAA+D,iBAAA/C,MAAAC;uDACAD,OACAwB,mBAAA0B,YAAA,UACA1B,mBAAAwB,KAAA,MAEAxB,mBAAAyB,KAAA,KAEAnD,qBAAAiD,iBAAA/C,MAAAC,OAGAf,sBAAA,SAAA6D,iBAAA/C,MAAAC,MACAD,MAAA,IAAAmD,WAAAnD,OACAF,qBAAAiD,iBAAA/C,MAAAC,OAGAhB,oBAAAa,sBAEAkC,gBAAAoB,uBAEApB,gBAAAqB,QAGAhD,yCCjKAhE,OAAA,0DACA,+CACA,6EACA,4DACA,SAAAiH,QAAAC;kRACA,YAEA,OAAAD,SAAAE,aAAAD,OAAAE,WAAA,SAAA,UAAA,UCvBApH,OAAA,yEAAA,cCgBAA,OAAA,mDACA,sEACA,yDACA,uEACA,SAAAqH,OAAAH;wRACA,YAEA,IAAAI,iCAAAD,OAAAE,OAeA,OAbAD,iCAAAE,YAAA,WACA,GAAAC,aAEA7G,MAAA8G,eAAAR,QAEAG,OAAAG,YAAAhG,KAAAZ,MAEA6G,aAAA7G,KAAAsD,WAAAG,KAAA,8BACAoD,aAAAE,QACAF,aAAAG,SAAA,4BAIAN,kCCtCAtH,OAAA,oDAAA,cAAA,SAAAC;sFACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAC,MACAK,KAAAC,cAAA,EAAA,YACAR,QAAAO,KAAAE,MAAAT,QAAAF,WAAAE,SAAAE,KAAAA,QACA,IAAAQ,QAAAC,OAAAE,OAAA,EAQA,OALAA,SAAA,uEACAF,OAAAX,QAAAwH,QAAA9G,OAAAC,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,QACAS,OAAAZ,QAAAA,OAAAyH,OAAA9G,OALA,kBAKAC,QAAAA,OAAAQ,KAAApB,QAAAmB,QAAAhB,KAAAA,OAAAS,SACAD,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA;8YCKAlB,OAAA,wCACA,SACA,yDACA,kDACA,oDACA,SAAA8C,EAAAgF,WAAAT,OAAAU,WACA,YAEA,IAEAC;uCAMAC,kBAAA,WACA,MATA,6BAiBAC,UAAA,WACA,GAAAC,kBAaA,OAZAd,QAAAe,gBAAA,SAAAC,MAAAC,KACAA,IAAAC,gBApBA,8BAoBAD,IAAAC,iBAEAJ,kBAAAH,iCAAAQ,uBACA1F,EAAA2F,QAAAN,kBAAA,SAAAxE,MAAAC,WACA,KAAA0E,IAAAI,WAAA9E,OACA,gBAAA0E,KAAAI,WAAA9E,QAAA0E,IAAAI,WAAA9E,OAAA,gBAAAD,UACA2E,IAAAI,WAAA9E,MAAAD,YAKA0D,QAQAmB,qBAAA,WACA,OACAG,cAAA,EACAhH,eAAA,EACAK,WAAA,EACAI,cAAA,EAEAF,aAAA;eACAC,aAAA,EAEAE,WAAA,EACAC,iBAAA,IAEAE,cAAA,EACAC,aAAA,IACAC,UAAA,EAEAC,kBAAA,EACAiG,OACAC,WAAA,EACAC,cAAA,EACAC,SAAA,GAGAnG,qBAAA,EACAqD,yBAAA,EACApD,sBAAA,MASAmG,YAAA,aAQAC,kBAAA,WACA,MAAAlB,YAOAmB,cAAA,SAAAZ,IAAAa,aAEA,MADAA,aAAAtB,OAAAS,IAAA/H,KAAA,UACA4I,aAMA,OAAAnB,oCC1HA,SAAAoB,GAAA,GAAAC,GAAAC,SAAAC,EAAA,cAAA/C,EAAA,aAAAgD,EAAAH,EAAAI,cAAA,QAAAD,GAAAE,KAAA,WAAAL,EAAAM,qBAAA,QAAA,GAAAJ,GAAAC,GAAAA,EAAAhD,GAAAgD,EAAAhD,GAAAoD,QAAAR,EAAAI,EAAAD,GAAAF,EAAAQ,eAAAT,KACA;oYACApJ,QAAA,wCAAA,SAAA8J,KAAA,MAAAA","file":"pciCreator.min.js","sourcesContent":["\ndefine('tpl!audioRecordingInteraction/creator/tpl/propertiesForm', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \"checked=\\\"checked\\\"\";\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  return \"style=\\\"display:none\\\"\";\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \" selected=\\\"selected\\\"\";\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  return \" hidden\";\n  }\n\n  buffer += \"<div class=\\\"panel\\\">\\r\\n    <label for=\\\"response-identifier\\\" class=\\\"has-icon\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Response identifier\", options) : helperMissing.call(depth0, \"__\", \"Response identifier\", options)))\n    + \"</label>\\r\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n    <div class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options)))\n    + \"</div>\\r\\n\\r\\n    <input id=\\\"response-identifier\\\"\\r\\n           type=\\\"text\\\"\\r\\n           name=\\\"identifier\\\"\\r\\n           value=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\\r\\n           placeholder=\\\"e.g. RESPONSE\\\"\\r\\n           data-validate=\\\"$notEmpty; $qtiIdentifier; $availableIdentifier(serial=\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\">\\r\\n</div>\\r\\n\\r\\n<div class=\\\"panel\\\">\\r\\n    <label>\\r\\n        <input name=\\\"allowPlayback\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowPlayback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow playback\", options) : helperMissing.call(depth0, \"__\", \"Allow playback\", options)))\n    + \"\\r\\n    </label>\\r\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n    <span class=\\\"tooltip-content\\\">\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Give the possibility to the test taker to playback its own recording.\", options) : helperMissing.call(depth0, \"__\", \"Give the possibility to the test taker to playback its own recording.\", options)))\n    + \"\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"panel\\\">\\r\\n    <label>\\r\\n        <input name=\\\"autoStart\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.autoStart), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Auto start recording\", options) : helperMissing.call(depth0, \"__\", \"Auto start recording\", options)))\n    + \"\\r\\n    </label>\\r\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n    <span class=\\\"tooltip-content\\\">\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recording starts automatically once test taker give microphone use authorisation. If a media stimulus is used, then the recording starts automatically after the stimulus has been played.\", options) : helperMissing.call(depth0, \"__\", \"Recording starts automatically once test taker give microphone use authorisation. If a media stimulus is used, then the recording starts automatically after the stimulus has been played.\", options)))\n    + \"\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n<div data-role=\\\"delayOptions\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.autoStart), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\r\\n    <div class=\\\"panel\\\">\\r\\n        <label for=\\\"delay-minutes\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Min:\", options) : helperMissing.call(depth0, \"__\", \"Min:\", options)))\n    + \"</label>\\r\\n        <input id=\\\"delay-minutes\\\" name=\\\"delayMinutes\\\" value=\\\"\";\n  if (helper = helpers.delayMinutes) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.delayMinutes); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" data-max=\\\"20\\\" type=\\\"text\\\" />\\r\\n        <label for=\\\"delay-seconds\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Sec:\", options) : helperMissing.call(depth0, \"__\", \"Sec:\", options)))\n    + \"</label>\\r\\n        <input id=\\\"delay-seconds\\\" name=\\\"delaySeconds\\\" value=\\\"\";\n  if (helper = helpers.delaySeconds) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.delaySeconds); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-increment=\\\"15\\\" data-min=\\\"0\\\" data-max=\\\"45\\\" type=\\\"text\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"panel\\\">\\r\\n    <label>\\r\\n        <input name=\\\"autoPlayback\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.autoPlayback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Auto playback recording\", options) : helperMissing.call(depth0, \"__\", \"Auto playback recording\", options)))\n    + \"\\r\\n    </label>\\r\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n    <span class=\\\"tooltip-content\\\">\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.\", options) : helperMissing.call(depth0, \"__\", \"Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.\", options)))\n    + \"\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"panel\\\">\\r\\n    <label for=\\\"max-records\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max attempts:\", options) : helperMissing.call(depth0, \"__\", \"Max attempts:\", options)))\n    + \"</label>\\r\\n    <input id=\\\"max-records\\\" name=\\\"maxRecords\\\" value=\\\"\";\n  if (helper = helpers.maxRecords) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxRecords); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" type=\\\"text\\\" />\\r\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n    <span class=\\\"tooltip-content\\\">\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.\", options) : helperMissing.call(depth0, \"__\", \"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.\", options)))\n    + \"\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"panel\\\">\\r\\n    <label for=\\\"max-recording-time\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time limit:\", options) : helperMissing.call(depth0, \"__\", \"Time limit:\", options)))\n    + \"</label>\\r\\n    <input id=\\\"max-recording-time\\\" name=\\\"maxRecordingTime\\\" value=\\\"\";\n  if (helper = helpers.maxRecordingTime) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxRecordingTime); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"10\\\" data-min=\\\"10\\\" data-max=\\\"\";\n  if (helper = helpers.maximumRecordingTimeLimit) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maximumRecordingTimeLimit); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" type=\\\"text\\\" />\\r\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n    <span class=\\\"tooltip-content\\\">\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In seconds. Maximum recording time allowed (cannot be less than 10seconds). Recording will automatically stop once reached.\", options) : helperMissing.call(depth0, \"__\", \"In seconds. Maximum recording time allowed (cannot be less than 10seconds). Recording will automatically stop once reached.\", options)))\n    + \"\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<div class=\\\"panel\\\">\\r\\n    <label for=\\\"is-compressed\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recording format\", options) : helperMissing.call(depth0, \"__\", \"Recording format\", options)))\n    + \"</label>\\r\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n    <span class=\\\"tooltip-content\\\">\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).\", options) : helperMissing.call(depth0, \"__\", \"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).\", options)))\n    + \"\\r\\n    </span>\\r\\n    <select id=\\\"is-compressed\\\" name=\\\"isCompressed\\\">\\r\\n        <option value=\\\"true\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Compressed\", options) : helperMissing.call(depth0, \"__\", \"Compressed\", options)))\n    + \"</option>\\r\\n        <option value=\\\"false\\\"\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Uncompressed\", options) : helperMissing.call(depth0, \"__\", \"Uncompressed\", options)))\n    + \"</option>\\r\\n    </select>\\r\\n</div>\\r\\n\\r\\n<div data-role=\\\"compressedOptions\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\r\\n    <div class=\\\"panel\\\">\\r\\n        <label for=\\\"audio-bitrate\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Audio bitrate:\", options) : helperMissing.call(depth0, \"__\", \"Audio bitrate:\", options)))\n    + \"</label>\\r\\n        <input id=\\\"audio-bitrate\\\" name=\\\"audioBitrate\\\" value=\\\"\";\n  if (helper = helpers.audioBitrate) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.audioBitrate); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1000\\\" data-min=\\\"8000\\\" type=\\\"text\\\" />\\r\\n        <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n        <span class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.\", options) : helperMissing.call(depth0, \"__\", \"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.\", options)))\n    + \"\\r\\n        </span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div data-role=\\\"uncompressedOptions\\\"  \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\r\\n    <div class=\\\"panel\\\">\\r\\n        <label for=\\\"is-stereo\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Channels\", options) : helperMissing.call(depth0, \"__\", \"Channels\", options)))\n    + \"</label>\\r\\n        <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n        <span class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Number of channels for the recording. Allow to cut the record size in half if used in mono.\", options) : helperMissing.call(depth0, \"__\", \"Number of channels for the recording. Allow to cut the record size in half if used in mono.\", options)))\n    + \"\\r\\n        </span>\\r\\n        <select id=\\\"is-stereo\\\" name=\\\"isStereo\\\">\\r\\n            <option value=\\\"false\\\"\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isStereo), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Mono\", options) : helperMissing.call(depth0, \"__\", \"Mono\", options)))\n    + \"</option>\\r\\n            <option value=\\\"true\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isStereo), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Stereo\", options) : helperMissing.call(depth0, \"__\", \"Stereo\", options)))\n    + \"</option>\\r\\n        </select>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n\\r\\n<div class=\\\"panel\\\">\\r\\n    <label>\\r\\n        <input name=\\\"useMediaStimulus\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.useMediaStimulus), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Use media stimulus\", options) : helperMissing.call(depth0, \"__\", \"Use media stimulus\", options)))\n    + \"\\r\\n    </label>\\r\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n    <span class=\\\"tooltip-content\\\">\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This options allow to insert a media stimulus that will have to be played before recording can happen.\", options) : helperMissing.call(depth0, \"__\", \"This options allow to insert a media stimulus that will have to be played before recording can happen.\", options)))\n    + \"\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"panel\\\">\\r\\n    <div class=\\\"media-stimulus-properties-form\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.useMediaStimulus), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"></div>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n\\r\\n<h3 class=\\\"txt-error\\\"><strong><span class=\\\"icon-warning\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"For tests only\", options) : helperMissing.call(depth0, \"__\", \"For tests only\", options)))\n    + \"</strong></h3>\\r\\n\\r\\n<div class=\\\"panel\\\">\\r\\n    <label>\\r\\n        <input name=\\\"displayDownloadLink\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.displayDownloadLink), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow download\", options) : helperMissing.call(depth0, \"__\", \"Allow download\", options)))\n    + \"\\r\\n    </label>\\r\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n    <span class=\\\"tooltip-content\\\">\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.\", options) : helperMissing.call(depth0, \"__\", \"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.\", options)))\n    + \"\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"panel\\\">\\r\\n    <label for=\\\"partial-update-interval\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Update interval:\", options) : helperMissing.call(depth0, \"__\", \"Update interval:\", options)))\n    + \"</label>\\r\\n    <input id=\\\"partial-update-interval\\\" name=\\\"partialUpdateInterval\\\" value=\\\"\";\n  if (helper = helpers.partialUpdateInterval) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.partialUpdateInterval); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1\\\" data-min=\\\"1\\\" data-max=\\\"60\\\" type=\\\"text\\\" />\\r\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n    <span class=\\\"tooltip-content\\\">\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In seconds. The time interval between partial updates of the recording.\", options) : helperMissing.call(depth0, \"__\", \"In seconds. The time interval between partial updates of the recording.\", options)))\n    + \"\\r\\n    </span>\\r\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017-2021 (original work) Open Assessment Technologies SA;\r\n */\r\ndefine('audioRecordingInteraction/creator/widget/states/Question',[\r\n    'lodash',\r\n    'i18n',\r\n    'jquery',\r\n    'module',\r\n    'taoQtiItem/qtiCreator/widgets/states/factory',\r\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Question',\r\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\r\n    'taoQtiItem/qtiCreator/widgets/helpers/pciMediaManager/pciMediaManager',\r\n    'taoQtiItem/qtiCreator/editor/simpleContentEditableElement',\r\n    'taoQtiItem/qtiCreator/editor/containerEditor',\r\n    'tpl!audioRecordingInteraction/creator/tpl/propertiesForm',\r\n    'util/typeCaster'\r\n], function (_, __, $, module, stateFactory, Question, formElement, pciMediaManagerFactory, simpleEditor, containerEditor, formTpl, typeCaster) {\r\n    'use strict';\r\n\r\n    var AudioRecordingInteractionStateQuestion = stateFactory.extend(Question, function create(){\r\n        var $container = this.widget.$container,\r\n            $prompt = $container.find('.prompt'),\r\n            interaction = this.widget.element;\r\n\r\n        containerEditor.create($prompt, {\r\n            change : function change(text){\r\n                interaction.data('prompt', text);\r\n                interaction.updateMarkup();\r\n            },\r\n            markup : interaction.markup,\r\n            markupSelector : '.prompt',\r\n            related : interaction,\r\n            areaBroker: this.widget.getAreaBroker()\r\n        });\r\n\r\n    }, function destroy(){\r\n        var $container = this.widget.$container,\r\n            $prompt = $container.find('.prompt');\r\n\r\n        simpleEditor.destroy($container);\r\n        containerEditor.destroy($prompt);\r\n    });\r\n\r\n    /**\r\n     * Change callback of form values\r\n     * @param {Object} interaction\r\n     * @param {*} value\r\n     * @param {String} name\r\n     */\r\n    function configChangeCallBack(interaction, value, name) {\r\n        interaction.prop(name, value);\r\n        interaction.triggerPci('configChange', [interaction.getProperties()]);\r\n    }\r\n\r\n    AudioRecordingInteractionStateQuestion.prototype.initForm = function initForm(){\r\n        var _widget = this.widget,\r\n            $form = _widget.$form,\r\n            interaction = _widget.element,\r\n            response = interaction.getResponseDeclaration(),\r\n            $mediaStimulusForm,\r\n            $compressedOptions,\r\n            $uncompressedOptions,\r\n            $delayOptions;\r\n\r\n        var pciMediaManager = pciMediaManagerFactory(_widget);\r\n\r\n        //render the form using the form template\r\n        $form.html(formTpl(_.defaults({}, module.config(), {\r\n            serial : response.serial,\r\n            identifier : interaction.attr('responseIdentifier'),\r\n\r\n            allowPlayback:          typeCaster.strToBool(interaction.prop('allowPlayback'), true),\r\n            autoStart:              typeCaster.strToBool(interaction.prop('autoStart'), false),\r\n            autoPlayback:           typeCaster.strToBool(interaction.prop('autoPlayback'), false),\r\n\r\n            delayMinutes:           interaction.prop('delayMinutes'),\r\n            delaySeconds:           interaction.prop('delaySeconds'),\r\n\r\n            maxRecords:             interaction.prop('maxRecords'),\r\n            maxRecordingTime:       interaction.prop('maxRecordingTime'),\r\n\r\n            isCompressed:           typeCaster.strToBool(interaction.prop('isCompressed'), true),\r\n            audioBitrate:           interaction.prop('audioBitrate'),\r\n            isStereo:               typeCaster.strToBool(interaction.prop('isStereo'), false),\r\n\r\n            useMediaStimulus:       typeCaster.strToBool(interaction.prop('useMediaStimulus'), false),\r\n\r\n            updateResponsePartially: typeCaster.strToBool(interaction.prop('updateResponsePartially'), true),\r\n            partialUpdateInterval: parseInt(interaction.prop('partialUpdateInterval'), 10) / 1000,\r\n\r\n            displayDownloadLink:    typeCaster.strToBool(interaction.prop('displayDownloadLink'), false)\r\n        })));\r\n\r\n        $mediaStimulusForm = $form.find('.media-stimulus-properties-form');\r\n        $mediaStimulusForm.append(pciMediaManager.getForm());\r\n\r\n        $compressedOptions = $form.find('[data-role=\"compressedOptions\"]');\r\n        $uncompressedOptions = $form.find('[data-role=\"uncompressedOptions\"]');\r\n\r\n        $delayOptions = $form.find('[data-role=\"delayOptions\"]');\r\n\r\n        //init form javascript\r\n        formElement.initWidget($form);\r\n\r\n        //init data change callbacks\r\n        formElement.setChangeCallbacks($form, interaction, _.assign({\r\n            identifier : function identifier(i, value){\r\n                response.id(value);\r\n                interaction.attr('responseIdentifier', value);\r\n            },\r\n\r\n            allowPlayback:      configChangeCallBack,\r\n\r\n            autoStart: function autoStart(boundInteraction, value, name) {\r\n                if (value) {\r\n                    $delayOptions.show();\r\n                } else {\r\n                    $delayOptions.hide();\r\n                }\r\n                configChangeCallBack(boundInteraction, value, name);\r\n            },\r\n\t\t\tautoPlayback:       configChangeCallBack,\r\n\r\n            delayMinutes:       configChangeCallBack,\r\n            delaySeconds:       configChangeCallBack,\r\n\r\n            maxRecords:         configChangeCallBack,\r\n            maxRecordingTime:   configChangeCallBack,\r\n\r\n            isCompressed: function isCompressed(boundInteraction, value, name) {\r\n                if (value === 'true') {\r\n                    $uncompressedOptions.hide();\r\n                    $compressedOptions.show();\r\n                } else {\r\n                    $uncompressedOptions.show();\r\n                    $compressedOptions.hide();\r\n                }\r\n                configChangeCallBack(boundInteraction, value, name);\r\n            },\r\n            audioBitrate:       configChangeCallBack,\r\n            isStereo:           configChangeCallBack,\r\n\r\n            useMediaStimulus: function useMediaStimulusCb(boundInteraction, value, name) {\r\n                if (value) {\r\n                    $mediaStimulusForm.removeClass('hidden');\r\n                    $mediaStimulusForm.show(250);\r\n                } else {\r\n                    $mediaStimulusForm.hide(250);\r\n                }\r\n                configChangeCallBack(boundInteraction, value, name);\r\n            },\r\n\r\n            partialUpdateInterval: function partialUpdateInterval(boundInteraction, value, name) {\r\n                value = parseFloat(value) * 1000\r\n                configChangeCallBack(boundInteraction, value, name);\r\n            },\r\n\r\n            displayDownloadLink: configChangeCallBack\r\n\r\n        }, pciMediaManager.getChangeCallbacks()));\r\n\r\n        pciMediaManager.init();\r\n    };\r\n\r\n    return AudioRecordingInteractionStateQuestion;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n */\r\ndefine('audioRecordingInteraction/creator/widget/states/states',[\r\n    'taoQtiItem/qtiCreator/widgets/states/factory',\r\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states',\r\n    'audioRecordingInteraction/creator/widget/states/Question'\r\n], function(factory, states){\r\n    'use strict';\r\n\r\n    return factory.createBundle(states, arguments, ['answer', 'correct', 'map']);\r\n});\n","\ndefine('css!audioRecordingInteraction/creator/css/audioRecordingInteraction',[],function(){});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n */\r\ndefine('audioRecordingInteraction/creator/widget/Widget',[\r\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget',\r\n    'audioRecordingInteraction/creator/widget/states/states',\r\n    'css!audioRecordingInteraction/creator/css/audioRecordingInteraction'\r\n], function(Widget, states){\r\n    'use strict';\r\n\r\n    var AudioRecordingInteractionWidget = Widget.clone();\r\n\r\n    AudioRecordingInteractionWidget.initCreator = function(){\r\n        var $interaction;\r\n\r\n        this.registerStates(states);\r\n\r\n        Widget.initCreator.call(this);\r\n\r\n        $interaction = this.$container.find('.audioRecordingInteraction');\r\n        if ($interaction.length) {\r\n            $interaction.addClass('tao-qti-creator-context');\r\n        }\r\n    };\r\n\r\n    return AudioRecordingInteractionWidget;\r\n});\n","\ndefine('tpl!audioRecordingInteraction/creator/tpl/markup', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"audioRecordingInteraction\\\">\\r\\n    <div class=\\\"prompt\\\">\";\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </div>\\r\\n    <div class=\\\"audio-rec\\\">\\r\\n        <div class=\\\"media-stimulus\\\"> </div>\\r\\n        <div class=\\\"input-meter\\\">\\r\\n            <div class=\\\"countdown-pie-chart\\\"> </div>\\r\\n            <div class=\\\"leds\\\"> </div>\\r\\n            <div class=\\\"mic\\\"> </div>\\r\\n        </div>\\r\\n        <div class=\\\"progress\\\"> </div>\\r\\n        <div class=\\\"controls\\\"> </div>\\r\\n    </div>\\r\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017-2021 (original work) Open Assessment Technologies SA;\r\n */\r\ndefine('audioRecordingInteraction/pciCreator',[\r\n    'lodash',\r\n    'taoQtiItem/qtiCreator/editor/customInteractionRegistry',\r\n    'audioRecordingInteraction/creator/widget/Widget',\r\n    'tpl!audioRecordingInteraction/creator/tpl/markup'\r\n], function (_, ciRegistry, Widget, markupTpl) {\r\n    'use strict';\r\n\r\n    var _typeIdentifier = 'audioRecordingInteraction';\r\n\r\n    var audioRecordingInteractionCreator = {\r\n        /**\r\n         * (required) Get the typeIdentifier of the custom interaction\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getTypeIdentifier: function getTypeIdentifier() {\r\n            return _typeIdentifier;\r\n        },\r\n        /**\r\n         * (required) Get the widget prototype\r\n         * Used in the renderer\r\n         *\r\n         * @returns {Object} Widget\r\n         */\r\n        getWidget: function getWidget() {\r\n            var defaultProperties;\r\n            Widget.beforeStateInit(function (event, pci) {\r\n                if (pci.typeIdentifier && pci.typeIdentifier === _typeIdentifier) {\r\n                    // ensure all the properties get a default value\r\n                    defaultProperties = audioRecordingInteractionCreator.getDefaultProperties();\r\n                    _.forEach(defaultProperties, function(value, name) {\r\n                        if ((typeof pci.properties[name] === 'undefined') ||\r\n                            (typeof pci.properties[name] === 'string' && !pci.properties[name] && typeof value !== 'string')) {\r\n                            pci.properties[name] = value;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            return Widget;\r\n        },\r\n        /**\r\n         * (optional) Get the default properties values of the pci.\r\n         * Used on new pci instance creation\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getDefaultProperties: function getDefaultProperties() {\r\n            return {\r\n                isReviewMode: false,\r\n                allowPlayback: true,\r\n                autoStart: false,\r\n                autoPlayback: false,\r\n\r\n                delayMinutes: 0,\r\n                delaySeconds: 0,\r\n\r\n                maxRecords: 2,\r\n                maxRecordingTime: 120,\r\n\r\n                isCompressed: true,\r\n                audioBitrate: 20000,\r\n                isStereo: false,\r\n\r\n                useMediaStimulus: false,\r\n                media: {\r\n                    autostart: true,\r\n                    replayTimeout: 5,\r\n                    maxPlays: 2\r\n                },\r\n\r\n                displayDownloadLink: false,\r\n                updateResponsePartially: true,\r\n                partialUpdateInterval: 1000\r\n            };\r\n        },\r\n        /**\r\n         * (optional) Callback to execute on the\r\n         * Used on new pci instance creation\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        afterCreate: function afterCreate() {\r\n            //do some stuff\r\n        },\r\n        /**\r\n         * (required) Gives the qti pci xml template\r\n         *\r\n         * @returns {function} handlebar template\r\n         */\r\n        getMarkupTemplate: function getMarkupTemplate() {\r\n            return markupTpl;\r\n        },\r\n        /**\r\n         * (optional) Allows passing additional data to xml template\r\n         *\r\n         * @returns {function} handlebar template\r\n         */\r\n        getMarkupData: function getMarkupData(pci, defaultData) {\r\n            defaultData.prompt = pci.data('prompt');\r\n            return defaultData;\r\n        }\r\n    };\r\n\r\n    //since we assume we are in a tao context, there is no use to expose the a global object for lib registration\r\n    //all libs should be declared here\r\n    return audioRecordingInteractionCreator;\r\n});\r\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel{margin-top:-15px}.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel label[for=\\\"delayMinutes\\\"]{min-width:0}.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel label[for=\\\"delaySeconds\\\"]{min-width:0;padding-left:18px}\\n\\n/*# sourceMappingURL=audioRecordingInteraction.css.map */');\n"]}