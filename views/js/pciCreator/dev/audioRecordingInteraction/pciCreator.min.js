define("tpl!audioRecordingInteraction/creator/tpl/propertiesForm",["handlebars"],function(hb){return hb.template(function(Handlebars,depth0,helpers,partials,data){function program1(depth0,data){return'checked="checked"'}function program3(depth0,data){return'style="display:none"'}function program5(depth0,data){return' selected="selected"'}function program7(depth0,data){return" hidden"}this.compilerInfo=[4,">= 1.0.0"],helpers=this.merge(helpers,Handlebars.helpers),data=data||{};var stack1,helper,options,buffer="",helperMissing=helpers.helperMissing,escapeExpression=this.escapeExpression,self=this
;return buffer+='<div class="panel">\r\n    <label for="response-identifier" class="has-icon">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Response identifier",options):helperMissing.call(depth0,"__","Response identifier",options)))+'</label>\r\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content:first" data-tooltip-theme="info"></span>\r\n    <div class="tooltip-content">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,'The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore ("_") and contain only Letters, underscores, hyphens ("-"), period (".", a.k.a. full-stop), Digits, CombiningChars and Extenders.',options):helperMissing.call(depth0,"__",'The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore ("_") and contain only Letters, underscores, hyphens ("-"), period (".", a.k.a. full-stop), Digits, CombiningChars and Extenders.',options)))+'</div>\r\n\r\n    <input id="response-identifier"\r\n           type="text"\r\n           name="identifier"\r\n           value="',
(helper=helpers.identifier)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.identifier,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+'"\r\n           placeholder="e.g. RESPONSE"\r\n           data-validate="$notEmpty; $qtiIdentifier; $availableIdentifier(serial=',(helper=helpers.serial)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.serial,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),
buffer+=escapeExpression(stack1)+');">\r\n</div>\r\n\r\n<div class="panel">\r\n    <label>\r\n        <input name="allowPlayback" type="checkbox" ',stack1=helpers.if.call(depth0,depth0&&depth0.allowPlayback,{hash:{},inverse:self.noop,fn:self.program(1,program1,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+='/>\r\n        <span class="icon-checkbox"></span> '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Allow playback",options):helperMissing.call(depth0,"__","Allow playback",options)))+'\r\n    </label>\r\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\r\n    <span class="tooltip-content">\r\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Give the possibility to the test taker to playback its own recording.",options):helperMissing.call(depth0,"__","Give the possibility to the test taker to playback its own recording.",options)))+'\r\n    </span>\r\n</div>\r\n\r\n<div class="panel">\r\n    <label>\r\n        <input name="autoStart" type="checkbox" ',stack1=helpers.if.call(depth0,depth0&&depth0.autoStart,{hash:{},inverse:self.noop,fn:self.program(1,program1,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+='/>\r\n        <span class="icon-checkbox"></span> '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Auto start recording",options):helperMissing.call(depth0,"__","Auto start recording",options)))+'\r\n    </label>\r\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\r\n    <span class="tooltip-content">\r\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Recording starts automatically once test taker give microphone use authorisation. If a media stimulus is used, then the recording starts automatically after the stimulus has been played.",options):helperMissing.call(depth0,"__","Recording starts automatically once test taker give microphone use authorisation. If a media stimulus is used, then the recording starts automatically after the stimulus has been played.",options)))+'\r\n    </span>\r\n</div>\r\n\r\n<div data-role="delayOptions" ',stack1=helpers.unless.call(depth0,depth0&&depth0.autoStart,{hash:{},inverse:self.noop,fn:self.program(3,program3,data),data:data}),
(stack1||0===stack1)&&(buffer+=stack1),buffer+='>\r\n    <div class="panel">\r\n        <label for="delay-minutes" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Min:",options):helperMissing.call(depth0,"__","Min:",options)))+'</label>\r\n        <input id="delay-minutes" name="delayMinutes" value="',(helper=helpers.delayMinutes)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.delayMinutes,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),
buffer+=escapeExpression(stack1)+'" data-increment="1" data-min="0" data-max="20" type="text" />\r\n        <label for="delay-seconds" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Sec:",options):helperMissing.call(depth0,"__","Sec:",options)))+'</label>\r\n        <input id="delay-seconds" name="delaySeconds" value="',(helper=helpers.delaySeconds)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.delaySeconds,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),
buffer+=escapeExpression(stack1)+'" data-increment="15" data-min="0" data-max="45" type="text" />\r\n    </div>\r\n</div>\r\n\r\n<div class="panel">\r\n    <label>\r\n        <input name="autoPlayback" type="checkbox" ',stack1=helpers.if.call(depth0,depth0&&depth0.autoPlayback,{hash:{},inverse:self.noop,fn:self.program(1,program1,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+='/>\r\n        <span class="icon-checkbox"></span> '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Auto playback recording",options):helperMissing.call(depth0,"__","Auto playback recording",options)))+'\r\n    </label>\r\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\r\n    <span class="tooltip-content">\r\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.",options):helperMissing.call(depth0,"__","Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.",options)))+'\r\n    </span>\r\n</div>\r\n\r\n<div class="panel">\r\n    <label for="max-records" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Max attempts:",options):helperMissing.call(depth0,"__","Max attempts:",options)))+'</label>\r\n    <input id="max-records" name="maxRecords" value="',(helper=helpers.maxRecords)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.maxRecords,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),
buffer+=escapeExpression(stack1)+'" class="large" data-increment="1" data-min="0" type="text" />\r\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\r\n    <span class="tooltip-content">\r\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.",options):helperMissing.call(depth0,"__","Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.",options)))+'\r\n    </span>\r\n</div>\r\n\r\n<div class="panel">\r\n    <label for="max-recording-time" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Time limit:",options):helperMissing.call(depth0,"__","Time limit:",options)))+'</label>\r\n    <input id="max-recording-time" name="maxRecordingTime" value="',(helper=helpers.maxRecordingTime)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.maxRecordingTime,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+'" class="large" data-increment="10" data-min="10" data-max="',(helper=helpers.maximumRecordingTimeLimit)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.maximumRecordingTimeLimit,
stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+'" type="text" />\r\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\r\n    <span class="tooltip-content">\r\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"In seconds. Maximum recording time allowed (cannot be less than 10seconds). Recording will automatically stop once reached.",options):helperMissing.call(depth0,"__","In seconds. Maximum recording time allowed (cannot be less than 10seconds). Recording will automatically stop once reached.",options)))+'\r\n    </span>\r\n</div>\r\n\r\n<hr />\r\n<div class="panel">\r\n    <label for="is-compressed">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Recording format",options):helperMissing.call(depth0,"__","Recording format",options)))+'</label>\r\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\r\n    <span class="tooltip-content">\r\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).",options):helperMissing.call(depth0,"__","With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).",options)))+'\r\n    </span>\r\n    <select id="is-compressed" name="isCompressed">\r\n        <option value="true"',stack1=helpers.if.call(depth0,depth0&&depth0.isCompressed,{hash:{},inverse:self.noop,fn:self.program(5,program5,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),
buffer+=">"+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Compressed",options):helperMissing.call(depth0,"__","Compressed",options)))+'</option>\r\n        <option value="false"',stack1=helpers.unless.call(depth0,depth0&&depth0.isCompressed,{hash:{},inverse:self.noop,fn:self.program(5,program5,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+=">"+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Uncompressed",options):helperMissing.call(depth0,"__","Uncompressed",options)))+'</option>\r\n    </select>\r\n</div>\r\n\r\n<div data-role="compressedOptions" ',stack1=helpers.unless.call(depth0,depth0&&depth0.isCompressed,{hash:{},inverse:self.noop,fn:self.program(3,program3,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+='>\r\n    <div class="panel">\r\n        <label for="audio-bitrate" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Audio bitrate:",options):helperMissing.call(depth0,"__","Audio bitrate:",options)))+'</label>\r\n        <input id="audio-bitrate" name="audioBitrate" value="',(helper=helpers.audioBitrate)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.audioBitrate,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),
buffer+=escapeExpression(stack1)+'" class="large" data-increment="1000" data-min="8000" type="text" />\r\n        <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\r\n        <span class="tooltip-content">\r\n            '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.",options):helperMissing.call(depth0,"__","In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.",options)))+'\r\n        </span>\r\n    </div>\r\n</div>\r\n\r\n<div data-role="uncompressedOptions"  ',stack1=helpers.if.call(depth0,depth0&&depth0.isCompressed,{hash:{},inverse:self.noop,fn:self.program(3,program3,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),
buffer+='>\r\n    <div class="panel">\r\n        <label for="is-stereo">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Channels",options):helperMissing.call(depth0,"__","Channels",options)))+'</label>\r\n        <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\r\n        <span class="tooltip-content">\r\n            '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Number of channels for the recording. Allow to cut the record size in half if used in mono.",options):helperMissing.call(depth0,"__","Number of channels for the recording. Allow to cut the record size in half if used in mono.",options)))+'\r\n        </span>\r\n        <select id="is-stereo" name="isStereo">\r\n            <option value="false"',stack1=helpers.unless.call(depth0,depth0&&depth0.isStereo,{hash:{},inverse:self.noop,fn:self.program(5,program5,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+=">"+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Mono",options):helperMissing.call(depth0,"__","Mono",options)))+'</option>\r\n            <option value="true"',stack1=helpers.if.call(depth0,depth0&&depth0.isStereo,{hash:{},inverse:self.noop,fn:self.program(5,program5,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+=">"+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Stereo",options):helperMissing.call(depth0,"__","Stereo",options)))+'</option>\r\n        </select>\r\n    </div>\r\n</div>\r\n\r\n<hr />\r\n\r\n<div class="panel">\r\n    <label>\r\n        <input name="useMediaStimulus" type="checkbox" ',
stack1=helpers.if.call(depth0,depth0&&depth0.useMediaStimulus,{hash:{},inverse:self.noop,fn:self.program(1,program1,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+='/>\r\n        <span class="icon-checkbox"></span> '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Use media stimulus",options):helperMissing.call(depth0,"__","Use media stimulus",options)))+'\r\n    </label>\r\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\r\n    <span class="tooltip-content">\r\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"This options allow to insert a media stimulus that will have to be played before recording can happen.",options):helperMissing.call(depth0,"__","This options allow to insert a media stimulus that will have to be played before recording can happen.",options)))+'\r\n    </span>\r\n</div>\r\n\r\n<div class="panel">\r\n    <div class="media-stimulus-properties-form',stack1=helpers.unless.call(depth0,depth0&&depth0.useMediaStimulus,{hash:{},inverse:self.noop,fn:self.program(7,program7,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),
buffer+='"></div>\r\n</div>\r\n\r\n<hr />\r\n\r\n<h3 class="txt-error"><strong><span class="icon-warning"></span> '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"For tests only",options):helperMissing.call(depth0,"__","For tests only",options)))+'</strong></h3>\r\n\r\n<div class="panel">\r\n    <label>\r\n        <input name="displayDownloadLink" type="checkbox" ',stack1=helpers.if.call(depth0,depth0&&depth0.displayDownloadLink,{hash:{},inverse:self.noop,fn:self.program(1,program1,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),
buffer+='/>\r\n        <span class="icon-checkbox"></span>\r\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Allow download",options):helperMissing.call(depth0,"__","Allow download",options)))+'\r\n    </label>\r\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\r\n    <span class="tooltip-content">\r\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.",options):helperMissing.call(depth0,"__","This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.",options)))+'\r\n    </span>\r\n</div>\r\n\r\n<div class="panel">\r\n    <label for="partial-update-interval" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,
options={hash:{},data:data},helper?helper.call(depth0,"Update interval:",options):helperMissing.call(depth0,"__","Update interval:",options)))+'</label>\r\n    <input id="partial-update-interval" name="partialUpdateInterval" value="',(helper=helpers.partialUpdateInterval)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.partialUpdateInterval,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),
buffer+=escapeExpression(stack1)+'" class="large" data-increment="1" data-min="1" data-max="60" type="text" />\r\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\r\n    <span class="tooltip-content">\r\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"In seconds. The time interval between partial updates of the recording.",options):helperMissing.call(depth0,"__","In seconds. The time interval between partial updates of the recording.",options)))+"\r\n    </span>\r\n</div>"})}),
define("audioRecordingInteraction/creator/widget/states/Question",["lodash","i18n","jquery","module","taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/states/Question","taoQtiItem/qtiCreator/widgets/helpers/formElement","taoQtiItem/qtiCreator/widgets/helpers/pciMediaManager/pciMediaManager","taoQtiItem/qtiCreator/editor/simpleContentEditableElement","taoQtiItem/qtiCreator/editor/containerEditor","tpl!audioRecordingInteraction/creator/tpl/propertiesForm","util/typeCaster"],function(_,__,$,module,stateFactory,Question,formElement,pciMediaManagerFactory,simpleEditor,containerEditor,formTpl,typeCaster){"use strict"
;function configChangeCallBack(interaction,value,name){interaction.prop(name,value),interaction.triggerPci("configChange",[interaction.getProperties()])}var AudioRecordingInteractionStateQuestion=stateFactory.extend(Question,function(){var $container=this.widget.$container,$prompt=$container.find(".prompt"),interaction=this.widget.element;containerEditor.create($prompt,{change:function(text){interaction.data("prompt",text),interaction.updateMarkup()},markup:interaction.markup,markupSelector:".prompt",related:interaction,areaBroker:this.widget.getAreaBroker()})},function(){var $container=this.widget.$container,$prompt=$container.find(".prompt")
;simpleEditor.destroy($container),containerEditor.destroy($prompt)});return AudioRecordingInteractionStateQuestion.prototype.initForm=function(){var $mediaStimulusForm,$compressedOptions,$uncompressedOptions,$delayOptions,_widget=this.widget,$form=_widget.$form,interaction=_widget.element,response=interaction.getResponseDeclaration(),pciMediaManager=pciMediaManagerFactory(_widget);$form.html(formTpl(_.defaults({},module.config(),{serial:response.serial,identifier:interaction.attr("responseIdentifier"),allowPlayback:typeCaster.strToBool(interaction.prop("allowPlayback"),!0),autoStart:typeCaster.strToBool(interaction.prop("autoStart"),!1),
autoPlayback:typeCaster.strToBool(interaction.prop("autoPlayback"),!1),delayMinutes:interaction.prop("delayMinutes"),delaySeconds:interaction.prop("delaySeconds"),maxRecords:interaction.prop("maxRecords"),maxRecordingTime:interaction.prop("maxRecordingTime"),isCompressed:typeCaster.strToBool(interaction.prop("isCompressed"),!0),audioBitrate:interaction.prop("audioBitrate"),isStereo:typeCaster.strToBool(interaction.prop("isStereo"),!1),useMediaStimulus:typeCaster.strToBool(interaction.prop("useMediaStimulus"),!1),updateResponsePartially:typeCaster.strToBool(interaction.prop("updateResponsePartially"),!0),
partialUpdateInterval:parseInt(interaction.prop("partialUpdateInterval"),10)/1e3,displayDownloadLink:typeCaster.strToBool(interaction.prop("displayDownloadLink"),!1)}))),$mediaStimulusForm=$form.find(".media-stimulus-properties-form"),$mediaStimulusForm.append(pciMediaManager.getForm()),$compressedOptions=$form.find('[data-role="compressedOptions"]'),$uncompressedOptions=$form.find('[data-role="uncompressedOptions"]'),$delayOptions=$form.find('[data-role="delayOptions"]'),formElement.initWidget($form),formElement.setChangeCallbacks($form,interaction,_.assign({identifier:function(i,value){response.id(value),interaction.attr("responseIdentifier",value)},
allowPlayback:configChangeCallBack,autoStart:function(boundInteraction,value,name){value?$delayOptions.show():$delayOptions.hide(),configChangeCallBack(boundInteraction,value,name)},autoPlayback:configChangeCallBack,delayMinutes:configChangeCallBack,delaySeconds:configChangeCallBack,maxRecords:configChangeCallBack,maxRecordingTime:configChangeCallBack,isCompressed:function(boundInteraction,value,name){"true"===value?($uncompressedOptions.hide(),$compressedOptions.show()):($uncompressedOptions.show(),$compressedOptions.hide()),configChangeCallBack(boundInteraction,value,name)},audioBitrate:configChangeCallBack,isStereo:configChangeCallBack,
useMediaStimulus:function(boundInteraction,value,name){value?($mediaStimulusForm.removeClass("hidden"),$mediaStimulusForm.show(250)):$mediaStimulusForm.hide(250),configChangeCallBack(boundInteraction,value,name)},partialUpdateInterval:function(boundInteraction,value,name){value=1e3*parseFloat(value),configChangeCallBack(boundInteraction,value,name)},displayDownloadLink:configChangeCallBack},pciMediaManager.getChangeCallbacks())),pciMediaManager.init()},AudioRecordingInteractionStateQuestion}),
define("audioRecordingInteraction/creator/widget/states/states",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states","audioRecordingInteraction/creator/widget/states/Question"],function(factory,states){"use strict";return factory.createBundle(states,arguments,["answer","correct","map"])}),define("css!audioRecordingInteraction/creator/css/audioRecordingInteraction",[],function(){}),
define("audioRecordingInteraction/creator/widget/Widget",["taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget","audioRecordingInteraction/creator/widget/states/states","css!audioRecordingInteraction/creator/css/audioRecordingInteraction"],function(Widget,states){"use strict";var AudioRecordingInteractionWidget=Widget.clone();return AudioRecordingInteractionWidget.initCreator=function(){var $interaction;this.registerStates(states),Widget.initCreator.call(this),$interaction=this.$container.find(".audioRecordingInteraction"),$interaction.length&&$interaction.addClass("tao-qti-creator-context")},AudioRecordingInteractionWidget}),
define("tpl!audioRecordingInteraction/creator/tpl/markup",["handlebars"],function(hb){return hb.template(function(Handlebars,depth0,helpers,partials,data){this.compilerInfo=[4,">= 1.0.0"],helpers=this.merge(helpers,Handlebars.helpers),data=data||{};var stack1,helper,buffer="";return buffer+='<div class="audioRecordingInteraction">\r\n    <div class="prompt">',(helper=helpers.prompt)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.prompt,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),(stack1||0===stack1)&&(buffer+=stack1),
buffer+=' </div>\r\n    <div class="audio-rec">\r\n        <div class="media-stimulus"> </div>\r\n        <div class="input-meter">\r\n            <div class="countdown-pie-chart"> </div>\r\n            <div class="leds"> </div>\r\n            <div class="mic"> </div>\r\n        </div>\r\n        <div class="progress"> </div>\r\n        <div class="controls"> </div>\r\n    </div>\r\n</div>'})}),define("audioRecordingInteraction/pciCreator",["lodash","taoQtiItem/qtiCreator/editor/customInteractionRegistry","audioRecordingInteraction/creator/widget/Widget","tpl!audioRecordingInteraction/creator/tpl/markup"],function(_,ciRegistry,Widget,markupTpl){"use strict"
;var audioRecordingInteractionCreator={getTypeIdentifier:function(){return"audioRecordingInteraction"},getWidget:function(){var defaultProperties;return Widget.beforeStateInit(function(event,pci){pci.typeIdentifier&&"audioRecordingInteraction"===pci.typeIdentifier&&(defaultProperties=audioRecordingInteractionCreator.getDefaultProperties(),_.forEach(defaultProperties,function(value,name){(void 0===pci.properties[name]||"string"==typeof pci.properties[name]&&!pci.properties[name]&&"string"!=typeof value)&&(pci.properties[name]=value)}))}),Widget},getDefaultProperties:function(){return{isReviewMode:!1,allowPlayback:!0,autoStart:!1,autoPlayback:!1,
delayMinutes:0,delaySeconds:0,maxRecords:2,maxRecordingTime:120,isCompressed:!0,audioBitrate:2e4,isStereo:!1,useMediaStimulus:!1,media:{autostart:!0,replayTimeout:5,maxPlays:2},displayDownloadLink:!1,updateResponsePartially:!0,partialUpdateInterval:1e3}},afterCreate:function(){},getMarkupTemplate:function(){return markupTpl},getMarkupData:function(pci,defaultData){return defaultData.prompt=pci.data("prompt"),defaultData}};return audioRecordingInteractionCreator}),function(c){var d=document,a="appendChild",i="styleSheet",s=d.createElement("style");s.type="text/css",d.getElementsByTagName("head")[0][a](s),s[i]?s[i].cssText=c:s[a](d.createTextNode(c))
}('.item-editor-interaction-related div[data-role="delayOptions"] .panel{margin-top:-15px}.item-editor-interaction-related div[data-role="delayOptions"] .panel label[for="delayMinutes"]{min-width:0}.item-editor-interaction-related div[data-role="delayOptions"] .panel label[for="delaySeconds"]{min-width:0;padding-left:18px}\n\n/*# sourceMappingURL=audioRecordingInteraction.css.map */'),define(["audioRecordingInteraction/pciCreator"],function(PCI){return PCI});
//# sourceMappingURL=pciCreator.min.js.map