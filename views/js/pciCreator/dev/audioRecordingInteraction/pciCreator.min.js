define("tpl!audioRecordingInteraction/creator/tpl/propertiesForm",["handlebars"],function(e){return e.template({1:function(){return"checked=\"checked\""},3:function(){return"style=\"display:none\""},5:function(){return" selected=\"selected\""},7:function(){return" hidden"},compiler:[8,">= 4.3.0"],main:function(e,n,t,l,a){var o,i,s=e.lookupProperty||function(e,n){if(Object.prototype.hasOwnProperty.call(e,n))return e[n]};return"<div class=\"panel\">\n    <label for=\"response-identifier\" class=\"has-icon\">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Response identifier",{name:"__",hash:{},data:a,loc:{start:{line:2,column:54},end:{line:2,column:82}}}))+"</label>\n    <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content:first\" data-tooltip-theme=\"info\"></span>\n    <div class=\"tooltip-content\">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\"_\") and contain only Letters, underscores, hyphens (\"-\"), period (\".\", a.k.a. full-stop), Digits, CombiningChars and Extenders.",{name:"__",hash:{},data:a,loc:{start:{line:4,column:33},end:{line:4,column:361}}}))+"</div>\n\n    <input id=\"response-identifier\"\n           type=\"text\"\n           name=\"identifier\"\n           value=\""+e.escapeExpression((i=null==(i=s(t,"identifier")||(null==n?n:s(n,"identifier")))?e.hooks.helperMissing:i,"function"==typeof i?i.call(null==n?e.nullContext||{}:n,{name:"identifier",hash:{},data:a,loc:{start:{line:9,column:18},end:{line:9,column:32}}}):i))+"\"\n           placeholder=\"e.g. RESPONSE\"\n           data-validate=\"$notEmpty; $qtiIdentifier; $availableIdentifier(serial="+e.escapeExpression((i=null==(i=s(t,"serial")||(null==n?n:s(n,"serial")))?e.hooks.helperMissing:i,"function"==typeof i?i.call(null==n?e.nullContext||{}:n,{name:"serial",hash:{},data:a,loc:{start:{line:11,column:81},end:{line:11,column:91}}}):i))+");\">\n</div>\n\n<div class=\"panel\">\n    <label>\n        <input name=\"allowPlayback\" type=\"checkbox\" "+(null==(o=s(t,"if").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"allowPlayback"),{name:"if",hash:{},fn:e.program(1,a,0),inverse:e.noop,data:a,loc:{start:{line:16,column:52},end:{line:16,column:97}}}))?"":o)+"/>\n        <span class=\"icon-checkbox\"></span> "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Allow playback",{name:"__",hash:{},data:a,loc:{start:{line:17,column:44},end:{line:17,column:67}}}))+"\n    </label>\n    <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content\" data-tooltip-theme=\"info\"></span>\n    <span class=\"tooltip-content\">\n        "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Give the possibility to the test taker to playback its own recording.",{name:"__",hash:{},data:a,loc:{start:{line:21,column:8},end:{line:21,column:86}}}))+"\n    </span>\n</div>\n\n<div class=\"panel\">\n    <label>\n        <input name=\"autoStart\" type=\"checkbox\" "+(null==(o=s(t,"if").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"autoStart"),{name:"if",hash:{},fn:e.program(1,a,0),inverse:e.noop,data:a,loc:{start:{line:27,column:48},end:{line:27,column:89}}}))?"":o)+"/>\n        <span class=\"icon-checkbox\"></span> "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Auto start recording",{name:"__",hash:{},data:a,loc:{start:{line:28,column:44},end:{line:28,column:73}}}))+"\n    </label>\n    <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content\" data-tooltip-theme=\"info\"></span>\n    <span class=\"tooltip-content\">\n        "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Recording starts automatically once test taker give microphone use authorisation. If a media stimulus is used, then the recording starts automatically after the stimulus has been played.",{name:"__",hash:{},data:a,loc:{start:{line:32,column:8},end:{line:32,column:203}}}))+"\n    </span>\n</div>\n\n<div data-role=\"delayOptions\" "+(null==(o=s(t,"unless").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"autoStart"),{name:"unless",hash:{},fn:e.program(3,a,0),inverse:e.noop,data:a,loc:{start:{line:36,column:30},end:{line:36,column:82}}}))?"":o)+">\n    <div class=\"panel\">\n        <label for=\"delay-minutes\" class=\"spinner\">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Min:",{name:"__",hash:{},data:a,loc:{start:{line:38,column:51},end:{line:38,column:64}}}))+"</label>\n        <input id=\"delay-minutes\" name=\"delayMinutes\" value=\""+e.escapeExpression((i=null==(i=s(t,"delayMinutes")||(null==n?n:s(n,"delayMinutes")))?e.hooks.helperMissing:i,"function"==typeof i?i.call(null==n?e.nullContext||{}:n,{name:"delayMinutes",hash:{},data:a,loc:{start:{line:39,column:61},end:{line:39,column:77}}}):i))+"\" data-increment=\"1\" data-min=\"0\" data-max=\"20\" type=\"text\" />\n        <label for=\"delay-seconds\" class=\"spinner\">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Sec:",{name:"__",hash:{},data:a,loc:{start:{line:40,column:51},end:{line:40,column:64}}}))+"</label>\n        <input id=\"delay-seconds\" name=\"delaySeconds\" value=\""+e.escapeExpression((i=null==(i=s(t,"delaySeconds")||(null==n?n:s(n,"delaySeconds")))?e.hooks.helperMissing:i,"function"==typeof i?i.call(null==n?e.nullContext||{}:n,{name:"delaySeconds",hash:{},data:a,loc:{start:{line:41,column:61},end:{line:41,column:77}}}):i))+"\" data-increment=\"15\" data-min=\"0\" data-max=\"45\" type=\"text\" />\n    </div>\n</div>\n\n<div class=\"panel\">\n    <label>\n        <input name=\"autoPlayback\" type=\"checkbox\" "+(null==(o=s(t,"if").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"autoPlayback"),{name:"if",hash:{},fn:e.program(1,a,0),inverse:e.noop,data:a,loc:{start:{line:47,column:51},end:{line:47,column:95}}}))?"":o)+"/>\n        <span class=\"icon-checkbox\"></span> "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Auto playback recording",{name:"__",hash:{},data:a,loc:{start:{line:48,column:44},end:{line:48,column:76}}}))+"\n    </label>\n    <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content\" data-tooltip-theme=\"info\"></span>\n    <span class=\"tooltip-content\">\n        "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.",{name:"__",hash:{},data:a,loc:{start:{line:52,column:8},end:{line:52,column:162}}}))+"\n    </span>\n</div>\n\n<div class=\"panel\">\n    <label for=\"max-records\" class=\"spinner\">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Max attempts:",{name:"__",hash:{},data:a,loc:{start:{line:57,column:45},end:{line:57,column:67}}}))+"</label>\n    <input id=\"max-records\" name=\"maxRecords\" value=\""+e.escapeExpression((i=null==(i=s(t,"maxRecords")||(null==n?n:s(n,"maxRecords")))?e.hooks.helperMissing:i,"function"==typeof i?i.call(null==n?e.nullContext||{}:n,{name:"maxRecords",hash:{},data:a,loc:{start:{line:58,column:53},end:{line:58,column:67}}}):i))+"\" class=\"large\" data-increment=\"1\" data-min=\"0\" type=\"text\" />\n    <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content\" data-tooltip-theme=\"info\"></span>\n    <span class=\"tooltip-content\">\n        "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.",{name:"__",hash:{},data:a,loc:{start:{line:61,column:8},end:{line:61,column:203}}}))+"\n    </span>\n</div>\n\n<div class=\"panel\">\n    <label for=\"max-recording-time\" class=\"spinner\">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Time limit:",{name:"__",hash:{},data:a,loc:{start:{line:66,column:52},end:{line:66,column:72}}}))+"</label>\n    <input id=\"max-recording-time\" name=\"maxRecordingTime\" value=\""+e.escapeExpression((i=null==(i=s(t,"maxRecordingTime")||(null==n?n:s(n,"maxRecordingTime")))?e.hooks.helperMissing:i,"function"==typeof i?i.call(null==n?e.nullContext||{}:n,{name:"maxRecordingTime",hash:{},data:a,loc:{start:{line:67,column:66},end:{line:67,column:86}}}):i))+"\" class=\"large\" data-increment=\"5\" data-min=\"5\" data-max=\""+e.escapeExpression((i=null==(i=s(t,"maximumRecordingTimeLimit")||(null==n?n:s(n,"maximumRecordingTimeLimit")))?e.hooks.helperMissing:i,"function"==typeof i?i.call(null==n?e.nullContext||{}:n,{name:"maximumRecordingTimeLimit",hash:{},data:a,loc:{start:{line:67,column:144},end:{line:67,column:173}}}):i))+"\" type=\"text\" />\n    <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content\" data-tooltip-theme=\"info\"></span>\n    <span class=\"tooltip-content\">\n        "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"In seconds. Maximum recording time allowed (cannot be less than 5 seconds). Recording will automatically stop once reached.",{name:"__",hash:{},data:a,loc:{start:{line:70,column:8},end:{line:70,column:140}}}))+"\n    </span>\n</div>\n\n<hr />\n<div class=\"panel\">\n    <label for=\"is-compressed\">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Recording format",{name:"__",hash:{},data:a,loc:{start:{line:76,column:31},end:{line:76,column:56}}}))+"</label>\n    <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content\" data-tooltip-theme=\"info\"></span>\n    <span class=\"tooltip-content\">\n        "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).",{name:"__",hash:{},data:a,loc:{start:{line:79,column:8},end:{line:79,column:162}}}))+"\n    </span>\n    <select id=\"is-compressed\" name=\"isCompressed\">\n        <option value=\"true\""+(null==(o=s(t,"if").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"isCompressed"),{name:"if",hash:{},fn:e.program(5,a,0),inverse:e.noop,data:a,loc:{start:{line:82,column:28},end:{line:82,column:75}}}))?"":o)+">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Compressed",{name:"__",hash:{},data:a,loc:{start:{line:82,column:76},end:{line:82,column:95}}}))+"</option>\n        <option value=\"false\""+(null==(o=s(t,"unless").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"isCompressed"),{name:"unless",hash:{},fn:e.program(5,a,0),inverse:e.noop,data:a,loc:{start:{line:83,column:29},end:{line:83,column:84}}}))?"":o)+">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Uncompressed",{name:"__",hash:{},data:a,loc:{start:{line:83,column:85},end:{line:83,column:106}}}))+"</option>\n    </select>\n</div>\n\n<div data-role=\"compressedOptions\" "+(null==(o=s(t,"unless").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"isCompressed"),{name:"unless",hash:{},fn:e.program(3,a,0),inverse:e.noop,data:a,loc:{start:{line:87,column:35},end:{line:87,column:90}}}))?"":o)+">\n    <div class=\"panel\">\n        <label for=\"audio-bitrate\" class=\"spinner\">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Audio bitrate:",{name:"__",hash:{},data:a,loc:{start:{line:89,column:51},end:{line:89,column:74}}}))+"</label>\n        <input id=\"audio-bitrate\" name=\"audioBitrate\" value=\""+e.escapeExpression((i=null==(i=s(t,"audioBitrate")||(null==n?n:s(n,"audioBitrate")))?e.hooks.helperMissing:i,"function"==typeof i?i.call(null==n?e.nullContext||{}:n,{name:"audioBitrate",hash:{},data:a,loc:{start:{line:90,column:61},end:{line:90,column:77}}}):i))+"\" class=\"large\" data-increment=\"1000\" data-min=\"8000\" type=\"text\" />\n        <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content\" data-tooltip-theme=\"info\"></span>\n        <span class=\"tooltip-content\">\n            "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.",{name:"__",hash:{},data:a,loc:{start:{line:93,column:12},end:{line:93,column:179}}}))+"\n        </span>\n    </div>\n</div>\n\n<div data-role=\"uncompressedOptions\"  "+(null==(o=s(t,"if").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"isCompressed"),{name:"if",hash:{},fn:e.program(3,a,0),inverse:e.noop,data:a,loc:{start:{line:98,column:38},end:{line:98,column:85}}}))?"":o)+">\n    <div class=\"panel\">\n        <label for=\"is-stereo\">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Channels",{name:"__",hash:{},data:a,loc:{start:{line:100,column:31},end:{line:100,column:48}}}))+"</label>\n        <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content\" data-tooltip-theme=\"info\"></span>\n        <span class=\"tooltip-content\">\n            "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Number of channels for the recording. Allow to cut the record size in half if used in mono.",{name:"__",hash:{},data:a,loc:{start:{line:103,column:12},end:{line:103,column:112}}}))+"\n        </span>\n        <select id=\"is-stereo\" name=\"isStereo\">\n            <option value=\"false\""+(null==(o=s(t,"unless").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"isStereo"),{name:"unless",hash:{},fn:e.program(5,a,0),inverse:e.noop,data:a,loc:{start:{line:106,column:33},end:{line:106,column:84}}}))?"":o)+">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Mono",{name:"__",hash:{},data:a,loc:{start:{line:106,column:85},end:{line:106,column:98}}}))+"</option>\n            <option value=\"true\""+(null==(o=s(t,"if").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"isStereo"),{name:"if",hash:{},fn:e.program(5,a,0),inverse:e.noop,data:a,loc:{start:{line:107,column:32},end:{line:107,column:75}}}))?"":o)+">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Stereo",{name:"__",hash:{},data:a,loc:{start:{line:107,column:76},end:{line:107,column:91}}}))+"</option>\n        </select>\n    </div>\n</div>\n\n<hr />\n\n<div class=\"panel\">\n    <label>\n        <input name=\"useMediaStimulus\" type=\"checkbox\" "+(null==(o=s(t,"if").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"useMediaStimulus"),{name:"if",hash:{},fn:e.program(1,a,0),inverse:e.noop,data:a,loc:{start:{line:116,column:55},end:{line:116,column:103}}}))?"":o)+"/>\n        <span class=\"icon-checkbox\"></span> "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Use media stimulus",{name:"__",hash:{},data:a,loc:{start:{line:117,column:44},end:{line:117,column:71}}}))+"\n    </label>\n    <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content\" data-tooltip-theme=\"info\"></span>\n    <span class=\"tooltip-content\">\n        "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"This options allow to insert a media stimulus that will have to be played before recording can happen.",{name:"__",hash:{},data:a,loc:{start:{line:121,column:8},end:{line:121,column:119}}}))+"\n    </span>\n</div>\n\n<div class=\"panel\">\n    <div class=\"media-stimulus-properties-form"+(null==(o=s(t,"unless").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"useMediaStimulus"),{name:"unless",hash:{},fn:e.program(7,a,0),inverse:e.noop,data:a,loc:{start:{line:126,column:46},end:{line:126,column:92}}}))?"":o)+"\"></div>\n</div>\n\n<hr />\n\n<h3 class=\"txt-error\"><strong><span class=\"icon-warning\"></span> "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"For tests only",{name:"__",hash:{},data:a,loc:{start:{line:131,column:65},end:{line:131,column:88}}}))+"</strong></h3>\n\n<div class=\"panel\">\n    <label>\n        <input name=\"displayDownloadLink\" type=\"checkbox\" "+(null==(o=s(t,"if").call(null==n?e.nullContext||{}:n,null==n?n:s(n,"displayDownloadLink"),{name:"if",hash:{},fn:e.program(1,a,0),inverse:e.noop,data:a,loc:{start:{line:135,column:58},end:{line:135,column:109}}}))?"":o)+"/>\n        <span class=\"icon-checkbox\"></span>\n        "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Allow download",{name:"__",hash:{},data:a,loc:{start:{line:137,column:8},end:{line:137,column:31}}}))+"\n    </label>\n    <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content\" data-tooltip-theme=\"info\"></span>\n    <span class=\"tooltip-content\">\n        "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.",{name:"__",hash:{},data:a,loc:{start:{line:141,column:8},end:{line:141,column:233}}}))+"\n    </span>\n</div>\n\n<div class=\"panel\">\n    <label for=\"partial-update-interval\" class=\"spinner\">"+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"Update interval:",{name:"__",hash:{},data:a,loc:{start:{line:146,column:57},end:{line:146,column:82}}}))+"</label>\n    <input id=\"partial-update-interval\" name=\"partialUpdateInterval\" value=\""+e.escapeExpression((i=null==(i=s(t,"partialUpdateInterval")||(null==n?n:s(n,"partialUpdateInterval")))?e.hooks.helperMissing:i,"function"==typeof i?i.call(null==n?e.nullContext||{}:n,{name:"partialUpdateInterval",hash:{},data:a,loc:{start:{line:147,column:76},end:{line:147,column:101}}}):i))+"\" class=\"large\" data-increment=\"1\" data-min=\"1\" data-max=\"60\" type=\"text\" />\n    <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content\" data-tooltip-theme=\"info\"></span>\n    <span class=\"tooltip-content\">\n        "+e.escapeExpression((s(t,"__")||n&&s(n,"__")||e.hooks.helperMissing).call(null==n?e.nullContext||{}:n,"In seconds. The time interval between partial updates of the recording.",{name:"__",hash:{},data:a,loc:{start:{line:150,column:8},end:{line:150,column:88}}}))+"\n    </span>\n</div>"},useData:!0})}),define("audioRecordingInteraction/creator/widget/states/Question",["lodash","i18n","jquery","module","taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/states/Question","taoQtiItem/qtiCreator/widgets/helpers/formElement","taoQtiItem/qtiCreator/widgets/helpers/pciMediaManager/pciMediaManager","taoQtiItem/qtiCreator/editor/simpleContentEditableElement","taoQtiItem/qtiCreator/editor/containerEditor","tpl!audioRecordingInteraction/creator/tpl/propertiesForm","util/typeCaster"],function(e,n,t,l,a,o,i,s,r,c,d,p){"use strict";function u(e,n,t){e.prop(t,n),e.triggerPci("configChange",[e.getProperties()])}var m=a.extend(o,function(){var e=this.widget.$container,n=e.find(".prompt"),t=this.widget.element;c.create(n,{change:function(e){t.data("prompt",e),t.updateMarkup()},markup:t.markup,markupSelector:".prompt",related:t,areaBroker:this.widget.getAreaBroker()})},function(){var e=this.widget.$container,n=e.find(".prompt");r.destroy(e),c.destroy(n)});return m.prototype.initForm=function(){var n,t,a,o,r=this.widget,c=r.$form,m=r.element,h=m.getResponseDeclaration(),f=s(r);c.html(d(e.defaults({},l.config(),{serial:h.serial,identifier:m.attr("responseIdentifier"),allowPlayback:p.strToBool(m.prop("allowPlayback"),!0),autoStart:p.strToBool(m.prop("autoStart"),!1),autoPlayback:p.strToBool(m.prop("autoPlayback"),!1),delayMinutes:m.prop("delayMinutes"),delaySeconds:m.prop("delaySeconds"),maxRecords:m.prop("maxRecords"),maxRecordingTime:m.prop("maxRecordingTime"),isCompressed:p.strToBool(m.prop("isCompressed"),!0),audioBitrate:m.prop("audioBitrate"),isStereo:p.strToBool(m.prop("isStereo"),!1),useMediaStimulus:p.strToBool(m.prop("useMediaStimulus"),!1),updateResponsePartially:p.strToBool(m.prop("updateResponsePartially"),!0),partialUpdateInterval:parseInt(m.prop("partialUpdateInterval"),10)/1e3,displayDownloadLink:p.strToBool(m.prop("displayDownloadLink"),!1)}))),n=c.find(".media-stimulus-properties-form"),n.append(f.getForm()),t=c.find("[data-role=\"compressedOptions\"]"),a=c.find("[data-role=\"uncompressedOptions\"]"),o=c.find("[data-role=\"delayOptions\"]"),i.initWidget(c),i.setChangeCallbacks(c,m,e.assign({identifier:function(e,n){h.id(n),m.attr("responseIdentifier",n)},allowPlayback:u,autoStart:function(e,n,t){n?o.show():o.hide(),u(e,n,t)},autoPlayback:u,delayMinutes:u,delaySeconds:u,maxRecords:u,maxRecordingTime:u,isCompressed:function(e,n,l){"true"===n?(a.hide(),t.show()):(a.show(),t.hide()),u(e,n,l)},audioBitrate:u,isStereo:u,useMediaStimulus:function(e,t,l){t?(n.removeClass("hidden"),n.show(250)):n.hide(250),u(e,t,l)},partialUpdateInterval:function(e,n,t){n=1e3*parseFloat(n),u(e,n,t)},displayDownloadLink:u},f.getChangeCallbacks())),f.init()},m}),define("audioRecordingInteraction/creator/widget/states/states",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states","audioRecordingInteraction/creator/widget/states/Question"],function(e,n){"use strict";return e.createBundle(n,arguments,["answer","correct","map"])}),define("css!audioRecordingInteraction/creator/css/audioRecordingInteraction",[],function(){}),define("audioRecordingInteraction/creator/widget/Widget",["taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget","audioRecordingInteraction/creator/widget/states/states","css!audioRecordingInteraction/creator/css/audioRecordingInteraction"],function(e,n){"use strict";var t=e.clone();return t.initCreator=function(){var t;this.registerStates(n),e.initCreator.call(this),t=this.$container.find(".audioRecordingInteraction"),t.length&&t.addClass("tao-qti-creator-context")},t}),define("tpl!audioRecordingInteraction/creator/tpl/markup",["handlebars"],function(e){return e.template({compiler:[8,">= 4.3.0"],main:function(e,n,t,l,a){var o,i,s=e.lookupProperty||function(e,n){if(Object.prototype.hasOwnProperty.call(e,n))return e[n]};return"<div class=\"audioRecordingInteraction\">\n    <div class=\"prompt\">"+(null==(i=null==(i=s(t,"prompt")||(null==n?n:s(n,"prompt")))?e.hooks.helperMissing:i,o="function"==typeof i?i.call(null==n?e.nullContext||{}:n,{name:"prompt",hash:{},data:a,loc:{start:{line:2,column:24},end:{line:2,column:36}}}):i)?"":o)+" </div>\n    <div class=\"audio-rec\">\n        <div class=\"media-stimulus\"> </div>\n        <div class=\"input-meter\">\n            <div class=\"countdown-pie-chart\"> </div>\n            <div class=\"leds\"> </div>\n            <div class=\"mic\"> </div>\n        </div>\n        <div class=\"progress\"> </div>\n        <div class=\"controls\"> </div>\n    </div>\n</div>"},useData:!0})}),define("audioRecordingInteraction/pciCreator",["lodash","taoQtiItem/qtiCreator/editor/customInteractionRegistry","audioRecordingInteraction/creator/widget/Widget","tpl!audioRecordingInteraction/creator/tpl/markup"],function(e,n,t,l){"use strict";var a={getTypeIdentifier:function(){return"audioRecordingInteraction"},getWidget:function(){var n;return t.beforeStateInit(function(t,l){l.typeIdentifier&&"audioRecordingInteraction"===l.typeIdentifier&&(n=a.getDefaultProperties(),e.forEach(n,function(e,n){void 0!==l.properties[n]&&("string"!=typeof l.properties[n]||l.properties[n]||"string"==typeof e)||(l.properties[n]=e)}))}),t},getDefaultProperties:function(){return{isReviewMode:!1,allowPlayback:!0,autoStart:!1,autoPlayback:!1,delayMinutes:0,delaySeconds:0,maxRecords:2,maxRecordingTime:120,isCompressed:!0,audioBitrate:2e4,isStereo:!1,useMediaStimulus:!1,media:{autostart:!0,replayTimeout:5,maxPlays:2},displayDownloadLink:!1,updateResponsePartially:!0,partialUpdateInterval:1e3}},afterCreate:function(){},getMarkupTemplate:function(){return l},getMarkupData:function(e,n){return n.prompt=e.data("prompt"),n}};return a}),function(e){var n=document,a=n.createElement("style");a.type="text/css",n.getElementsByTagName("head")[0].appendChild(a),a.styleSheet?a.styleSheet.cssText=e:a.appendChild(n.createTextNode(e))}(".item-editor-interaction-related div[data-role=delayOptions] .panel{margin-top:-15px}.item-editor-interaction-related div[data-role=delayOptions] .panel label[for=delayMinutes]{min-width:0}.item-editor-interaction-related div[data-role=delayOptions] .panel label[for=delaySeconds]{min-width:0;padding-left:18px}\n\n/*# sourceMappingURL=audioRecordingInteraction.css.map */"),define(["audioRecordingInteraction/pciCreator"],function(e){return e});